/*
 * Armando Roque Villasana A01138717
 * Clase Ventana (interfaz grafica)
 * Editado por ultima vez el 18/10/2017
 */

//Imports
import java.awt.CardLayout;
import java.awt.Desktop;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.text.DateFormat;
import java.util.Arrays;


public class Ventana extends javax.swing.JFrame {

    /**
     * Creates new form Ventana
     */
    public Ventana() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        lateralPanel = new javax.swing.JPanel();
        dashButton = new javax.swing.JButton();
        entregasButton = new javax.swing.JButton();
        ventasButton = new javax.swing.JButton();
        inventarioButton = new javax.swing.JButton();
        clientesButton = new javax.swing.JButton();
        cardsPanel = new javax.swing.JPanel();
        menuPrincipalPanel = new javax.swing.JPanel();
        jLabel73 = new javax.swing.JLabel();
        jLabel74 = new javax.swing.JLabel();
        jLabel75 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        dashPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jScrollPane13 = new javax.swing.JScrollPane();
        jList13 = new javax.swing.JList<>();
        subMenuEntregas = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        subMenuEntregas2 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        rNPPanel = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        labelError1 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        rPPanel = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        labelError2 = new javax.swing.JLabel();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        bHECPanel = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        jLabel61 = new javax.swing.JLabel();
        jScrollPane11 = new javax.swing.JScrollPane();
        jList11 = new javax.swing.JList<>();
        jButton39 = new javax.swing.JButton();
        jScrollPane12 = new javax.swing.JScrollPane();
        jList12 = new javax.swing.JList<>();
        labelError10 = new javax.swing.JLabel();
        jButton47 = new javax.swing.JButton();
        jButton48 = new javax.swing.JButton();
        subMenuVentasPanel = new javax.swing.JPanel();
        jButton16 = new javax.swing.JButton();
        jButton17 = new javax.swing.JButton();
        jLabel40 = new javax.swing.JLabel();
        jButton18 = new javax.swing.JButton();
        subMenuVentas2Panel = new javax.swing.JPanel();
        jButton19 = new javax.swing.JButton();
        jButton20 = new javax.swing.JButton();
        jLabel41 = new javax.swing.JLabel();
        jButton21 = new javax.swing.JButton();
        rVCPanel = new javax.swing.JPanel();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jTextField14 = new javax.swing.JTextField();
        jLabel47 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        jButton22 = new javax.swing.JButton();
        jButton23 = new javax.swing.JButton();
        jButton24 = new javax.swing.JButton();
        jLabel50 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jList3 = new javax.swing.JList<>();
        labelError4 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jList4 = new javax.swing.JList<>();
        jDateChooser3 = new com.toedter.calendar.JDateChooser();
        rVSCPanel = new javax.swing.JPanel();
        jLabel51 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();
        jTextField17 = new javax.swing.JTextField();
        jLabel56 = new javax.swing.JLabel();
        jLabel57 = new javax.swing.JLabel();
        jLabel58 = new javax.swing.JLabel();
        jButton25 = new javax.swing.JButton();
        jButton26 = new javax.swing.JButton();
        jButton27 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList<>();
        labelError3 = new javax.swing.JLabel();
        jDateChooser4 = new com.toedter.calendar.JDateChooser();
        bHVCPanel = new javax.swing.JPanel();
        jLabel59 = new javax.swing.JLabel();
        jLabel60 = new javax.swing.JLabel();
        jButton28 = new javax.swing.JButton();
        jButton29 = new javax.swing.JButton();
        jButton41 = new javax.swing.JButton();
        jScrollPane9 = new javax.swing.JScrollPane();
        jList9 = new javax.swing.JList<>();
        jScrollPane10 = new javax.swing.JScrollPane();
        jList10 = new javax.swing.JList<>();
        labelError9 = new javax.swing.JLabel();
        subMenuClientesPanel = new javax.swing.JPanel();
        jButton30 = new javax.swing.JButton();
        jButton31 = new javax.swing.JButton();
        jLabel64 = new javax.swing.JLabel();
        jButton32 = new javax.swing.JButton();
        subMenuClientesPanel2 = new javax.swing.JPanel();
        jButton43 = new javax.swing.JButton();
        jButton44 = new javax.swing.JButton();
        jLabel76 = new javax.swing.JLabel();
        jButton45 = new javax.swing.JButton();
        rNCPanel = new javax.swing.JPanel();
        jLabel46 = new javax.swing.JLabel();
        jTextField15 = new javax.swing.JTextField();
        jLabel55 = new javax.swing.JLabel();
        jTextField18 = new javax.swing.JTextField();
        jLabel77 = new javax.swing.JLabel();
        jLabel78 = new javax.swing.JLabel();
        jTextField26 = new javax.swing.JTextField();
        jLabel79 = new javax.swing.JLabel();
        jTextField27 = new javax.swing.JTextField();
        jLabel80 = new javax.swing.JLabel();
        jLabel81 = new javax.swing.JLabel();
        jLabel82 = new javax.swing.JLabel();
        jButton15 = new javax.swing.JButton();
        jButton46 = new javax.swing.JButton();
        labelError5 = new javax.swing.JLabel();
        eRCPanel = new javax.swing.JPanel();
        jLabel65 = new javax.swing.JLabel();
        jLabel67 = new javax.swing.JLabel();
        jLabel68 = new javax.swing.JLabel();
        jTextField24 = new javax.swing.JTextField();
        jLabel69 = new javax.swing.JLabel();
        jTextField25 = new javax.swing.JTextField();
        jButton34 = new javax.swing.JButton();
        jButton35 = new javax.swing.JButton();
        jButton37 = new javax.swing.JButton();
        jScrollPane8 = new javax.swing.JScrollPane();
        jList8 = new javax.swing.JList<>();
        labelError7 = new javax.swing.JLabel();
        bRCPanel = new javax.swing.JPanel();
        jLabel66 = new javax.swing.JLabel();
        jButton33 = new javax.swing.JButton();
        jButton36 = new javax.swing.JButton();
        jLabel70 = new javax.swing.JLabel();
        jButton40 = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        jList6 = new javax.swing.JList<>();
        jScrollPane7 = new javax.swing.JScrollPane();
        jList7 = new javax.swing.JList<>();
        labelError8 = new javax.swing.JLabel();
        bInventarioPanel = new javax.swing.JPanel();
        jLabel71 = new javax.swing.JLabel();
        jButton38 = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        jList5 = new javax.swing.JList<>();
        labelError6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 204, 204));

        mainPanel.setBackground(new java.awt.Color(255, 204, 204));
        mainPanel.setForeground(new java.awt.Color(255, 204, 204));
        mainPanel.setLayout(new java.awt.BorderLayout());

        lateralPanel.setBackground(new java.awt.Color(195, 220, 238));
        lateralPanel.setLayout(new java.awt.GridLayout(5, 1));

        dashButton.setForeground(new java.awt.Color(0, 0, 255));
        dashButton.setText("Dashboard");
        dashButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dashButtonActionPerformed(evt);
            }
        });
        lateralPanel.add(dashButton);

        entregasButton.setBackground(new java.awt.Color(0, 0, 255));
        entregasButton.setForeground(new java.awt.Color(255, 102, 102));
        entregasButton.setText("Entregas");
        entregasButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                entregasButtonActionPerformed(evt);
            }
        });
        lateralPanel.add(entregasButton);

        ventasButton.setForeground(new java.awt.Color(0, 153, 0));
        ventasButton.setText("Ventas");
        ventasButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ventasButtonActionPerformed(evt);
            }
        });
        lateralPanel.add(ventasButton);

        inventarioButton.setForeground(new java.awt.Color(255, 159, 83));
        inventarioButton.setText("Inventario");
        inventarioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inventarioButtonActionPerformed(evt);
            }
        });
        lateralPanel.add(inventarioButton);

        clientesButton.setForeground(new java.awt.Color(151, 43, 165));
        clientesButton.setText("Clientes");
        clientesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clientesButtonActionPerformed(evt);
            }
        });
        lateralPanel.add(clientesButton);

        mainPanel.add(lateralPanel, java.awt.BorderLayout.WEST);

        cardsPanel.setLayout(new java.awt.CardLayout());

        menuPrincipalPanel.setBackground(new java.awt.Color(255, 255, 255));

        jLabel73.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel73.setText("La fecha de hoy es:");

        jLabel74.setFont(new java.awt.Font("Marker Felt", 1, 36)); // NOI18N
        jLabel74.setText("Menú Principal");

        jLabel75.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel75.setText("¡Bienvenido al sistema de inventario de MagniFarmacias!");

        jLabel25.setFont(new java.awt.Font("Lucida Grande", 1, 48)); // NOI18N
        jLabel25.setText("Fecha");
        ActionListener actiondate = new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e){
                java.util.Date myDate = new Date();
                String date = myDate.toString();
                jLabel25.setText(date.substring(0, 19));
            }
        };
        new javax.swing.Timer(1000, actiondate).start();

        jLabel26.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Logos/Layer 1.png"))); // NOI18N

        javax.swing.GroupLayout menuPrincipalPanelLayout = new javax.swing.GroupLayout(menuPrincipalPanel);
        menuPrincipalPanel.setLayout(menuPrincipalPanelLayout);
        menuPrincipalPanelLayout.setHorizontalGroup(
            menuPrincipalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, menuPrincipalPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel74, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(101, 101, 101))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, menuPrincipalPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(menuPrincipalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(menuPrincipalPanelLayout.createSequentialGroup()
                        .addGap(0, 9, Short.MAX_VALUE)
                        .addGroup(menuPrincipalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, menuPrincipalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel73, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel75))
                            .addComponent(jLabel26, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 523, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        menuPrincipalPanelLayout.setVerticalGroup(
            menuPrincipalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, menuPrincipalPanelLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel74, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel75, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel73, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel25)
                .addGap(31, 31, 31))
        );

        cardsPanel.add(menuPrincipalPanel, "menuPrincipalPanel");

        dashPanel.setBackground(new java.awt.Color(195, 220, 238));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 36)); // NOI18N
        jLabel1.setText("Dashboard");

        jLabel29.setText("El total de productos actualmente en inventario es de:");

        jLabel30.setText("El valor total de productos actualmente en inventario es de:");

        jLabel31.setText("El número de clientes registrados es de:");

        jLabel32.setText("El valor total de las ventas es de:");

        jLabel33.setText("El valor de la venta promedio de clientes registrados es de:");

        jLabel34.setText("Los cinco productos más vendidos son:");

        jLabel35.setText("###");

        jLabel36.setText("$###");

        jLabel37.setText("###");

        jLabel38.setText("$###");

        jLabel39.setText("$###");

        jScrollPane13.setViewportView(jList13);

        javax.swing.GroupLayout dashPanelLayout = new javax.swing.GroupLayout(dashPanel);
        dashPanel.setLayout(dashPanelLayout);
        dashPanelLayout.setHorizontalGroup(
            dashPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dashPanelLayout.createSequentialGroup()
                .addGroup(dashPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dashPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel29))
                    .addGroup(dashPanelLayout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(dashPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel30))
                    .addGroup(dashPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel31))
                    .addGroup(dashPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel34))
                    .addGroup(dashPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel33))
                    .addGroup(dashPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel32)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 95, Short.MAX_VALUE)
                .addGroup(dashPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel36)
                    .addComponent(jLabel35)
                    .addComponent(jLabel37)
                    .addComponent(jLabel38)
                    .addComponent(jLabel39))
                .addGap(46, 46, 46))
            .addGroup(dashPanelLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 475, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        dashPanelLayout.setVerticalGroup(
            dashPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dashPanelLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(dashPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29)
                    .addComponent(jLabel35))
                .addGap(31, 31, 31)
                .addGroup(dashPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel30)
                    .addComponent(jLabel36))
                .addGap(36, 36, 36)
                .addGroup(dashPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel31)
                    .addComponent(jLabel37))
                .addGap(28, 28, 28)
                .addGroup(dashPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel33)
                    .addComponent(jLabel38))
                .addGap(32, 32, 32)
                .addGroup(dashPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel32)
                    .addComponent(jLabel39))
                .addGap(36, 36, 36)
                .addComponent(jLabel34)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        cardsPanel.add(dashPanel, "dashPanel");

        subMenuEntregas.setBackground(new java.awt.Color(255, 231, 225));
        subMenuEntregas.setForeground(new java.awt.Color(102, 102, 255));

        jButton1.setText("Registrar entrega");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Consultar historial");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 1, 36)); // NOI18N
        jLabel3.setText("Entregas Proveedor");

        jButton3.setText("Cancelar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout subMenuEntregasLayout = new javax.swing.GroupLayout(subMenuEntregas);
        subMenuEntregas.setLayout(subMenuEntregasLayout);
        subMenuEntregasLayout.setHorizontalGroup(
            subMenuEntregasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(subMenuEntregasLayout.createSequentialGroup()
                .addGroup(subMenuEntregasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(subMenuEntregasLayout.createSequentialGroup()
                        .addGap(149, 149, 149)
                        .addGroup(subMenuEntregasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 252, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(subMenuEntregasLayout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(subMenuEntregasLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jButton3)))
                .addContainerGap(133, Short.MAX_VALUE))
        );
        subMenuEntregasLayout.setVerticalGroup(
            subMenuEntregasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(subMenuEntregasLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                .addGap(41, 41, 41)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton3)
                .addGap(27, 27, 27))
        );

        cardsPanel.add(subMenuEntregas, "subMenuEntregas");

        subMenuEntregas2.setBackground(new java.awt.Color(255, 231, 225));

        jButton4.setText("Registrar nuevo producto");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Registrar producto existente");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 1, 36)); // NOI18N
        jLabel4.setText("Registro Entregas Proveedor");

        jButton6.setText("Cancelar");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout subMenuEntregas2Layout = new javax.swing.GroupLayout(subMenuEntregas2);
        subMenuEntregas2.setLayout(subMenuEntregas2Layout);
        subMenuEntregas2Layout.setHorizontalGroup(
            subMenuEntregas2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(subMenuEntregas2Layout.createSequentialGroup()
                .addGroup(subMenuEntregas2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(subMenuEntregas2Layout.createSequentialGroup()
                        .addGroup(subMenuEntregas2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(subMenuEntregas2Layout.createSequentialGroup()
                                .addGap(149, 149, 149)
                                .addGroup(subMenuEntregas2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, 252, Short.MAX_VALUE)
                                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(subMenuEntregas2Layout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addComponent(jButton6)))
                        .addGap(0, 146, Short.MAX_VALUE))
                    .addGroup(subMenuEntregas2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 541, Short.MAX_VALUE)))
                .addContainerGap())
        );
        subMenuEntregas2Layout.setVerticalGroup(
            subMenuEntregas2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(subMenuEntregas2Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                .addGap(41, 41, 41)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton6)
                .addGap(27, 27, 27))
        );

        cardsPanel.add(subMenuEntregas2, "subMenuEntregas2");

        rNPPanel.setBackground(new java.awt.Color(255, 231, 225));

        jLabel5.setFont(new java.awt.Font("Lucida Grande", 1, 36)); // NOI18N
        jLabel5.setText("Nuevo Producto");

        jLabel6.setFont(new java.awt.Font("Lucida Grande", 1, 36)); // NOI18N
        jLabel6.setText("Registro Entregas Proveedor");

        jLabel2.setText("El código del nuevo producto será:");

        jLabel7.setText("###");

        jLabel8.setText("Nombre del producto:");

        jLabel9.setText("Marca del producto:");

        jLabel10.setText("Precio al consumidor:");

        jLabel11.setText("Cantidad entregada:");

        jLabel12.setText("Nombre del proveedor");

        jLabel13.setText("Fecha de entrega:");

        jLabel14.setText("Folio de esta entrega:");

        jLabel15.setText("###");

        jButton7.setText("Guardar entrega");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("Guardar entrega y registrar una nueva");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText("Cancelar");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        labelError1.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        labelError1.setForeground(new java.awt.Color(255, 0, 51));
        labelError1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jDateChooser1.setDateFormatString("d, MMM, yyyy");

        javax.swing.GroupLayout rNPPanelLayout = new javax.swing.GroupLayout(rNPPanel);
        rNPPanel.setLayout(rNPPanelLayout);
        rNPPanelLayout.setHorizontalGroup(
            rNPPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rNPPanelLayout.createSequentialGroup()
                .addGroup(rNPPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(rNPPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(rNPPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(rNPPanelLayout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(125, 125, 125))))
                    .addGroup(rNPPanelLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(rNPPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(rNPPanelLayout.createSequentialGroup()
                                .addGroup(rNPPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(rNPPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(rNPPanelLayout.createSequentialGroup()
                                        .addGroup(rNPPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jTextField2, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jTextField5)
                                            .addComponent(jTextField6)
                                            .addComponent(jTextField4, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jTextField3, javax.swing.GroupLayout.Alignment.LEADING))
                                        .addGap(92, 92, 92))
                                    .addGroup(rNPPanelLayout.createSequentialGroup()
                                        .addGroup(rNPPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jDateChooser1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGroup(rNPPanelLayout.createSequentialGroup()
                                                .addGap(154, 154, 154)
                                                .addGroup(rNPPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(rNPPanelLayout.createSequentialGroup()
                                                        .addGap(6, 6, 6)
                                                        .addComponent(jLabel15))
                                                    .addComponent(jLabel7))))
                                        .addGap(94, 94, 94))))
                            .addGroup(rNPPanelLayout.createSequentialGroup()
                                .addComponent(jButton9)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(rNPPanelLayout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(labelError1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addGroup(rNPPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton7)
                            .addComponent(jButton8))))
                .addContainerGap())
        );
        rNPPanelLayout.setVerticalGroup(
            rNPPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rNPPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(rNPPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(rNPPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(rNPPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(rNPPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(rNPPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(rNPPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(rNPPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(rNPPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jLabel15))
                .addGap(27, 27, 27)
                .addGroup(rNPPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelError1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(rNPPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton9))
                .addGap(30, 30, 30))
        );

        cardsPanel.add(rNPPanel, "rNPPanel");

        rPPanel.setBackground(new java.awt.Color(255, 231, 225));

        jLabel16.setFont(new java.awt.Font("Lucida Grande", 1, 36)); // NOI18N
        jLabel16.setText("Registro Entregas Proveedor");

        jLabel17.setFont(new java.awt.Font("Lucida Grande", 1, 36)); // NOI18N
        jLabel17.setText("Producto Existente");

        jLabel18.setText("Producto entregado:");

        jLabel19.setText("Cantidad entregada:");

        jLabel20.setText("Nombre del proveedor");

        jLabel21.setText("Fecha de entrega:");

        jLabel22.setText("Folio de esta entrega:");

        jLabel23.setText("###");

        jButton10.setText("Guardar entrega");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton11.setText("Cancelar");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jButton12.setText("Guardar entrega y registrar una nueva");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(jList1);

        labelError2.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        labelError2.setForeground(new java.awt.Color(255, 0, 51));
        labelError2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jDateChooser2.setDateFormatString("d, MMM, yyyy");

        javax.swing.GroupLayout rPPanelLayout = new javax.swing.GroupLayout(rPPanel);
        rPPanel.setLayout(rPPanelLayout);
        rPPanelLayout.setHorizontalGroup(
            rPPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rPPanelLayout.createSequentialGroup()
                .addGroup(rPPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(rPPanelLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(rPPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(rPPanelLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29))))
                    .addGroup(rPPanelLayout.createSequentialGroup()
                        .addGroup(rPPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(rPPanelLayout.createSequentialGroup()
                                .addGap(42, 42, 42)
                                .addGroup(rPPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(rPPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(labelError2, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(79, 79, 79)
                        .addGroup(rPPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField8)
                            .addComponent(jDateChooser2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(rPPanelLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(rPPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel23)
                                    .addComponent(jButton10)))
                            .addComponent(jTextField7, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(37, 37, 37)))
                .addContainerGap())
            .addGroup(rPPanelLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jButton11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton12)
                .addGap(14, 14, 14))
        );
        rPPanelLayout.setVerticalGroup(
            rPPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rPPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(rPPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(rPPanelLayout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(rPPanelLayout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(jLabel18)))
                .addGap(31, 31, 31)
                .addGroup(rPPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(rPPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel20)
                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(rPPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(rPPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(jLabel23))
                .addGroup(rPPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(rPPanelLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(rPPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(labelError2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(rPPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton11)
                    .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47))
        );

        cardsPanel.add(rPPanel, "rPPanel");

        bHECPanel.setBackground(new java.awt.Color(255, 231, 225));

        jLabel24.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel24.setText("Búsqueda en Historial de Entregas por Producto");

        jLabel61.setText("Producto:");

        jScrollPane11.setViewportView(jList11);

        jButton39.setText("Buscar");
        jButton39.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton39ActionPerformed(evt);
            }
        });

        jScrollPane12.setViewportView(jList12);

        labelError10.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        labelError10.setForeground(new java.awt.Color(255, 0, 51));
        labelError10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jButton47.setText("Consultar registro completo");
        jButton47.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton47ActionPerformed(evt);
            }
        });

        jButton48.setText("Volver al menú principal");
        jButton48.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton48ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout bHECPanelLayout = new javax.swing.GroupLayout(bHECPanel);
        bHECPanel.setLayout(bHECPanelLayout);
        bHECPanelLayout.setHorizontalGroup(
            bHECPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bHECPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel24, javax.swing.GroupLayout.DEFAULT_SIZE, 541, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(bHECPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(bHECPanelLayout.createSequentialGroup()
                    .addGap(28, 28, 28)
                    .addGroup(bHECPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(bHECPanelLayout.createSequentialGroup()
                            .addGroup(bHECPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(bHECPanelLayout.createSequentialGroup()
                                    .addGap(51, 51, 51)
                                    .addComponent(jLabel61, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(bHECPanelLayout.createSequentialGroup()
                                    .addGap(36, 36, 36)
                                    .addComponent(jButton39)))
                            .addGap(18, 18, 18)
                            .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(bHECPanelLayout.createSequentialGroup()
                            .addComponent(jScrollPane12)
                            .addGap(8, 8, 8))
                        .addGroup(bHECPanelLayout.createSequentialGroup()
                            .addGroup(bHECPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(bHECPanelLayout.createSequentialGroup()
                                    .addComponent(jButton47)
                                    .addGap(0, 0, Short.MAX_VALUE))
                                .addComponent(labelError10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGap(18, 18, 18)
                            .addComponent(jButton48)
                            .addGap(2, 2, 2)))
                    .addGap(28, 28, 28)))
        );
        bHECPanelLayout.setVerticalGroup(
            bHECPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bHECPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(509, 509, 509))
            .addGroup(bHECPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(bHECPanelLayout.createSequentialGroup()
                    .addGap(42, 42, 42)
                    .addGroup(bHECPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(bHECPanelLayout.createSequentialGroup()
                            .addGap(32, 32, 32)
                            .addComponent(jLabel61)
                            .addGap(33, 33, 33)
                            .addComponent(jButton39))
                        .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addGroup(bHECPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jButton48, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(bHECPanelLayout.createSequentialGroup()
                            .addComponent(labelError10, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(2, 2, 2)
                            .addComponent(jButton47)))
                    .addContainerGap(42, Short.MAX_VALUE)))
        );

        cardsPanel.add(bHECPanel, "bHECPanel");

        subMenuVentasPanel.setBackground(new java.awt.Color(218, 238, 218));

        jButton16.setText("Registrar venta");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });

        jButton17.setText("Consultar historial");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });

        jLabel40.setFont(new java.awt.Font("Lucida Grande", 1, 36)); // NOI18N
        jLabel40.setText("Ventas");

        jButton18.setText("Cancelar");
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout subMenuVentasPanelLayout = new javax.swing.GroupLayout(subMenuVentasPanel);
        subMenuVentasPanel.setLayout(subMenuVentasPanelLayout);
        subMenuVentasPanelLayout.setHorizontalGroup(
            subMenuVentasPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(subMenuVentasPanelLayout.createSequentialGroup()
                .addGroup(subMenuVentasPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(subMenuVentasPanelLayout.createSequentialGroup()
                        .addGap(149, 149, 149)
                        .addGroup(subMenuVentasPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton17, javax.swing.GroupLayout.DEFAULT_SIZE, 252, Short.MAX_VALUE)
                            .addComponent(jButton16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(subMenuVentasPanelLayout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jLabel40, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(subMenuVentasPanelLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jButton18)))
                .addContainerGap(133, Short.MAX_VALUE))
        );
        subMenuVentasPanelLayout.setVerticalGroup(
            subMenuVentasPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(subMenuVentasPanelLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel40, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                .addGap(41, 41, 41)
                .addComponent(jButton16, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(jButton17, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton18)
                .addGap(27, 27, 27))
        );

        cardsPanel.add(subMenuVentasPanel, "subMenuVentasPanel");

        subMenuVentas2Panel.setBackground(new java.awt.Color(218, 238, 218));

        jButton19.setText("Registrar venta con cliente registrado");
        jButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton19ActionPerformed(evt);
            }
        });

        jButton20.setText("Registrar venta con cliente sin registrar");
        jButton20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton20ActionPerformed(evt);
            }
        });

        jLabel41.setFont(new java.awt.Font("Lucida Grande", 1, 36)); // NOI18N
        jLabel41.setText("Registro Ventas");

        jButton21.setText("Cancelar");
        jButton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton21ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout subMenuVentas2PanelLayout = new javax.swing.GroupLayout(subMenuVentas2Panel);
        subMenuVentas2Panel.setLayout(subMenuVentas2PanelLayout);
        subMenuVentas2PanelLayout.setHorizontalGroup(
            subMenuVentas2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(subMenuVentas2PanelLayout.createSequentialGroup()
                .addGroup(subMenuVentas2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(subMenuVentas2PanelLayout.createSequentialGroup()
                        .addGroup(subMenuVentas2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(subMenuVentas2PanelLayout.createSequentialGroup()
                                .addGap(149, 149, 149)
                                .addGroup(subMenuVentas2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(subMenuVentas2PanelLayout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addComponent(jButton21)))
                        .addGap(0, 107, Short.MAX_VALUE))
                    .addGroup(subMenuVentas2PanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel41, javax.swing.GroupLayout.DEFAULT_SIZE, 541, Short.MAX_VALUE)))
                .addContainerGap())
        );
        subMenuVentas2PanelLayout.setVerticalGroup(
            subMenuVentas2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(subMenuVentas2PanelLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel41, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                .addGap(41, 41, 41)
                .addComponent(jButton19, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(jButton20, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton21)
                .addGap(27, 27, 27))
        );

        cardsPanel.add(subMenuVentas2Panel, "subMenuVentas2Panel");

        rVCPanel.setBackground(new java.awt.Color(218, 238, 218));

        jLabel42.setFont(new java.awt.Font("Lucida Grande", 1, 36)); // NOI18N
        jLabel42.setText("Registro Venta");

        jLabel43.setFont(new java.awt.Font("Lucida Grande", 1, 36)); // NOI18N
        jLabel43.setText("Cliente registrado");

        jLabel44.setText("Producto vendido:");

        jLabel45.setText("Cantidad vendida:");

        jLabel47.setText("Fecha de venta:");

        jLabel48.setText("Folio de esta venta:");

        jLabel49.setText("###");

        jButton22.setText("Guardar venta");
        jButton22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton22ActionPerformed(evt);
            }
        });

        jButton23.setText("Cancelar");
        jButton23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton23ActionPerformed(evt);
            }
        });

        jButton24.setText("Guardar venta y registrar una nueva");
        jButton24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton24ActionPerformed(evt);
            }
        });

        jLabel50.setText("Cliente al que se vende:");

        jScrollPane3.setViewportView(jList3);

        labelError4.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        labelError4.setForeground(new java.awt.Color(255, 0, 51));
        labelError4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jScrollPane4.setViewportView(jList4);

        jDateChooser3.setDateFormatString("d, MMM, yyyy");

        javax.swing.GroupLayout rVCPanelLayout = new javax.swing.GroupLayout(rVCPanel);
        rVCPanel.setLayout(rVCPanelLayout);
        rVCPanelLayout.setHorizontalGroup(
            rVCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rVCPanelLayout.createSequentialGroup()
                .addGroup(rVCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(rVCPanelLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(rVCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel42, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel43, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(rVCPanelLayout.createSequentialGroup()
                        .addGroup(rVCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(rVCPanelLayout.createSequentialGroup()
                                .addGap(42, 42, 42)
                                .addGroup(rVCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton23)
                                    .addGroup(rVCPanelLayout.createSequentialGroup()
                                        .addComponent(jLabel48, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(134, 134, 134)
                                        .addComponent(jLabel49))
                                    .addGroup(rVCPanelLayout.createSequentialGroup()
                                        .addGroup(rVCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel47, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel45, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel44, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel50, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(79, 79, 79)
                                        .addGroup(rVCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jTextField14)
                                            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
                                            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
                                            .addComponent(jDateChooser3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                            .addGroup(rVCPanelLayout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addComponent(labelError4, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(rVCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton24)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, rVCPanelLayout.createSequentialGroup()
                                        .addComponent(jButton22)
                                        .addGap(27, 27, 27)))))
                        .addGap(0, 16, Short.MAX_VALUE)))
                .addContainerGap())
        );
        rVCPanelLayout.setVerticalGroup(
            rVCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rVCPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel42, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel43, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(rVCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel48)
                    .addComponent(jLabel49))
                .addGroup(rVCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(rVCPanelLayout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jLabel44))
                    .addGroup(rVCPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(rVCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(rVCPanelLayout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jLabel50))
                    .addGroup(rVCPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(rVCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel45)
                    .addComponent(jTextField14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(rVCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel47)
                    .addComponent(jDateChooser3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(rVCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton22, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelError4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(rVCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton24, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton23))
                .addGap(47, 47, 47))
        );

        cardsPanel.add(rVCPanel, "rVCPanel");

        rVSCPanel.setBackground(new java.awt.Color(218, 238, 218));

        jLabel51.setFont(new java.awt.Font("Lucida Grande", 1, 36)); // NOI18N
        jLabel51.setText("Registro Venta");

        jLabel52.setFont(new java.awt.Font("Lucida Grande", 1, 36)); // NOI18N
        jLabel52.setText("Sin Cliente");

        jLabel53.setText("Producto vendido:");

        jLabel54.setText("Cantidad vendida:");

        jLabel56.setText("Fecha de venta:");

        jLabel57.setText("Folio de esta venta:");

        jLabel58.setText("###");

        jButton25.setText("Guardar venta");
        jButton25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton25ActionPerformed(evt);
            }
        });

        jButton26.setText("Cancelar");
        jButton26.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton26ActionPerformed(evt);
            }
        });

        jButton27.setText("Guardar venta y registrar una nueva");
        jButton27.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton27ActionPerformed(evt);
            }
        });

        jScrollPane2.setViewportView(jList2);

        labelError3.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        labelError3.setForeground(new java.awt.Color(255, 0, 51));
        labelError3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jDateChooser4.setDateFormatString("d, MMM, yyyy");

        javax.swing.GroupLayout rVSCPanelLayout = new javax.swing.GroupLayout(rVSCPanel);
        rVSCPanel.setLayout(rVSCPanelLayout);
        rVSCPanelLayout.setHorizontalGroup(
            rVSCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rVSCPanelLayout.createSequentialGroup()
                .addGroup(rVSCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, rVSCPanelLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(rVSCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel51, javax.swing.GroupLayout.DEFAULT_SIZE, 541, Short.MAX_VALUE)
                            .addComponent(jLabel52, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(rVSCPanelLayout.createSequentialGroup()
                                .addGap(324, 324, 324)
                                .addGroup(rVSCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                    .addGroup(rVSCPanelLayout.createSequentialGroup()
                                        .addComponent(jDateChooser4, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, rVSCPanelLayout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(rVSCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(rVSCPanelLayout.createSequentialGroup()
                                .addComponent(jButton26)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton27)
                                .addGap(17, 17, 17))
                            .addGroup(rVSCPanelLayout.createSequentialGroup()
                                .addGroup(rVSCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(rVSCPanelLayout.createSequentialGroup()
                                        .addGroup(rVSCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel56, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel53, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel57, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(82, 82, 82)
                                        .addComponent(jLabel58)
                                        .addGap(119, 119, 119))
                                    .addGroup(rVSCPanelLayout.createSequentialGroup()
                                        .addComponent(jLabel54, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jTextField17, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(rVSCPanelLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(labelError3, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton25)
                        .addGap(67, 67, 67)))
                .addGap(6, 6, 6))
        );
        rVSCPanelLayout.setVerticalGroup(
            rVSCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rVSCPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel51, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel52, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(39, 39, 39)
                .addGroup(rVSCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel57)
                    .addComponent(jLabel58))
                .addGroup(rVSCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(rVSCPanelLayout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(rVSCPanelLayout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(jLabel53)))
                .addGap(30, 30, 30)
                .addGroup(rVSCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel54)
                    .addComponent(jTextField17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(rVSCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(rVSCPanelLayout.createSequentialGroup()
                        .addComponent(jLabel56)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(labelError3, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(rVSCPanelLayout.createSequentialGroup()
                        .addComponent(jDateChooser4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(jButton25, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(rVSCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton26)
                    .addComponent(jButton27, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47))
        );

        cardsPanel.add(rVSCPanel, "rVSCPanel");

        bHVCPanel.setBackground(new java.awt.Color(218, 238, 218));

        jLabel59.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel59.setText("Búsqueda en Historial de Ventas por Producto");

        jLabel60.setText("Producto:");

        jButton28.setText("Buscar");
        jButton28.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton28ActionPerformed(evt);
            }
        });

        jButton29.setText("Volver al menú principal");
        jButton29.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton29ActionPerformed(evt);
            }
        });

        jButton41.setText("Consultar registro completo");
        jButton41.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton41ActionPerformed(evt);
            }
        });

        jScrollPane9.setViewportView(jList9);

        jScrollPane10.setViewportView(jList10);

        labelError9.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        labelError9.setForeground(new java.awt.Color(255, 0, 51));
        labelError9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout bHVCPanelLayout = new javax.swing.GroupLayout(bHVCPanel);
        bHVCPanel.setLayout(bHVCPanelLayout);
        bHVCPanelLayout.setHorizontalGroup(
            bHVCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bHVCPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel59, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bHVCPanelLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(bHVCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bHVCPanelLayout.createSequentialGroup()
                        .addGroup(bHVCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(bHVCPanelLayout.createSequentialGroup()
                                .addGap(51, 51, 51)
                                .addComponent(jLabel60, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(bHVCPanelLayout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addComponent(jButton28)))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(30, Short.MAX_VALUE))
                    .addGroup(bHVCPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane10)
                        .addGap(38, 38, 38))
                    .addGroup(bHVCPanelLayout.createSequentialGroup()
                        .addGroup(bHVCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(bHVCPanelLayout.createSequentialGroup()
                                .addComponent(jButton41)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(labelError9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(jButton29)
                        .addGap(32, 32, 32))))
        );
        bHVCPanelLayout.setVerticalGroup(
            bHVCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bHVCPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel59, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(bHVCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bHVCPanelLayout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addComponent(jLabel60)
                        .addGap(33, 33, 33)
                        .addComponent(jButton28))
                    .addGroup(bHVCPanelLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(bHVCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton29, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(bHVCPanelLayout.createSequentialGroup()
                        .addComponent(labelError9, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(jButton41)))
                .addGap(14, 14, 14))
        );

        cardsPanel.add(bHVCPanel, "bHVCPanel");

        subMenuClientesPanel.setBackground(new java.awt.Color(242, 235, 255));

        jButton30.setText("Consultar registro clientes");
        jButton30.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton30ActionPerformed(evt);
            }
        });

        jButton31.setText("Registrar o Editar Información");
        jButton31.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton31ActionPerformed(evt);
            }
        });

        jLabel64.setFont(new java.awt.Font("Lucida Grande", 1, 36)); // NOI18N
        jLabel64.setText("Clientes");

        jButton32.setText("Cancelar");
        jButton32.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton32ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout subMenuClientesPanelLayout = new javax.swing.GroupLayout(subMenuClientesPanel);
        subMenuClientesPanel.setLayout(subMenuClientesPanelLayout);
        subMenuClientesPanelLayout.setHorizontalGroup(
            subMenuClientesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(subMenuClientesPanelLayout.createSequentialGroup()
                .addGroup(subMenuClientesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(subMenuClientesPanelLayout.createSequentialGroup()
                        .addGap(149, 149, 149)
                        .addGroup(subMenuClientesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton31, javax.swing.GroupLayout.DEFAULT_SIZE, 252, Short.MAX_VALUE)
                            .addComponent(jButton30, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(subMenuClientesPanelLayout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jLabel64, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(subMenuClientesPanelLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jButton32)))
                .addContainerGap(133, Short.MAX_VALUE))
        );
        subMenuClientesPanelLayout.setVerticalGroup(
            subMenuClientesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(subMenuClientesPanelLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel64, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                .addGap(41, 41, 41)
                .addComponent(jButton30, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(jButton31, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton32)
                .addGap(27, 27, 27))
        );

        cardsPanel.add(subMenuClientesPanel, "subMenuClientesPanel");

        subMenuClientesPanel2.setBackground(new java.awt.Color(242, 235, 255));

        jButton43.setText("Registrar nuevo cliente");
        jButton43.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton43ActionPerformed(evt);
            }
        });

        jButton44.setText("Editar Información");
        jButton44.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton44ActionPerformed(evt);
            }
        });

        jLabel76.setFont(new java.awt.Font("Lucida Grande", 1, 36)); // NOI18N
        jLabel76.setText("Registrar o Editar Clientes");

        jButton45.setText("Cancelar");
        jButton45.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton45ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout subMenuClientesPanel2Layout = new javax.swing.GroupLayout(subMenuClientesPanel2);
        subMenuClientesPanel2.setLayout(subMenuClientesPanel2Layout);
        subMenuClientesPanel2Layout.setHorizontalGroup(
            subMenuClientesPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(subMenuClientesPanel2Layout.createSequentialGroup()
                .addGroup(subMenuClientesPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(subMenuClientesPanel2Layout.createSequentialGroup()
                        .addGap(149, 149, 149)
                        .addGroup(subMenuClientesPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton44, javax.swing.GroupLayout.DEFAULT_SIZE, 252, Short.MAX_VALUE)
                            .addComponent(jButton43, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(subMenuClientesPanel2Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jButton45))
                    .addGroup(subMenuClientesPanel2Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jLabel76, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        subMenuClientesPanel2Layout.setVerticalGroup(
            subMenuClientesPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(subMenuClientesPanel2Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel76, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                .addGap(41, 41, 41)
                .addComponent(jButton43, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(jButton44, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton45)
                .addGap(27, 27, 27))
        );

        cardsPanel.add(subMenuClientesPanel2, "subMenuClientesPanel2");

        rNCPanel.setBackground(new java.awt.Color(242, 235, 255));

        jLabel46.setText("El código del nuevo cliente será:");

        jLabel55.setText("Nombre del cliente:");

        jLabel77.setText("###");

        jLabel78.setText("Apellido del cliente:");

        jLabel79.setText("Teléfono del cliente:");

        jLabel80.setFont(new java.awt.Font("Lucida Grande", 1, 36)); // NOI18N
        jLabel80.setText("Registro Clientes");

        jLabel81.setFont(new java.awt.Font("Lucida Grande", 1, 36)); // NOI18N
        jLabel81.setText("Nuevo Cliente");

        jLabel82.setText("E-Mail del cliente:");

        jButton15.setText("Cancelar");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        jButton46.setText("Guardar Nuevo Cliente");
        jButton46.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton46ActionPerformed(evt);
            }
        });

        labelError5.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        labelError5.setForeground(new java.awt.Color(255, 0, 51));
        labelError5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout rNCPanelLayout = new javax.swing.GroupLayout(rNCPanel);
        rNCPanel.setLayout(rNCPanelLayout);
        rNCPanelLayout.setHorizontalGroup(
            rNCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rNCPanelLayout.createSequentialGroup()
                .addGroup(rNCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(rNCPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(rNCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel80, javax.swing.GroupLayout.DEFAULT_SIZE, 541, Short.MAX_VALUE)
                            .addComponent(jLabel81, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, rNCPanelLayout.createSequentialGroup()
                                .addComponent(jLabel82, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTextField15, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(rNCPanelLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jButton15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton46)
                        .addGap(12, 12, 12)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, rNCPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(labelError5, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(282, 282, 282))
            .addGroup(rNCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(rNCPanelLayout.createSequentialGroup()
                    .addGap(7, 7, 7)
                    .addGroup(rNCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel46, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel79, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel78, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel55, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(154, 154, 154)
                    .addGroup(rNCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jTextField18)
                        .addComponent(jTextField26)
                        .addComponent(jTextField27)
                        .addComponent(jLabel77))
                    .addGap(7, 7, 7)))
        );
        rNCPanelLayout.setVerticalGroup(
            rNCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rNCPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel80, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel81, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE)
                .addGap(157, 157, 157)
                .addGroup(rNCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel82))
                .addGap(97, 97, 97)
                .addComponent(labelError5, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(rNCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(rNCPanelLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jButton15))
                    .addGroup(rNCPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton46, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(26, 26, 26))
            .addGroup(rNCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(rNCPanelLayout.createSequentialGroup()
                    .addGap(145, 145, 145)
                    .addGroup(rNCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel46)
                        .addComponent(jLabel77))
                    .addGap(18, 18, 18)
                    .addGroup(rNCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel55)
                        .addComponent(jTextField18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(rNCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel78)
                        .addComponent(jTextField26, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(rNCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel79)
                        .addComponent(jTextField27, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(253, Short.MAX_VALUE)))
        );

        cardsPanel.add(rNCPanel, "rNCPanel");

        eRCPanel.setBackground(new java.awt.Color(242, 235, 255));

        jLabel65.setFont(new java.awt.Font("Lucida Grande", 1, 36)); // NOI18N
        jLabel65.setText("Editar Información Clientes");

        jLabel67.setText("Cliente");

        jLabel68.setText("Correo electrónico cliente:");

        jLabel69.setText("Teléfono cliente:");

        jButton34.setText("Cancelar");
        jButton34.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton34ActionPerformed(evt);
            }
        });

        jButton35.setText("Registrar cambios");
        jButton35.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton35ActionPerformed(evt);
            }
        });

        jButton37.setText("Buscar");
        jButton37.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton37ActionPerformed(evt);
            }
        });

        jScrollPane8.setViewportView(jList8);

        labelError7.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        labelError7.setForeground(new java.awt.Color(255, 0, 51));
        labelError7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout eRCPanelLayout = new javax.swing.GroupLayout(eRCPanel);
        eRCPanel.setLayout(eRCPanelLayout);
        eRCPanelLayout.setHorizontalGroup(
            eRCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(eRCPanelLayout.createSequentialGroup()
                .addGroup(eRCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(eRCPanelLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel65, javax.swing.GroupLayout.DEFAULT_SIZE, 541, Short.MAX_VALUE))
                    .addGroup(eRCPanelLayout.createSequentialGroup()
                        .addGroup(eRCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(eRCPanelLayout.createSequentialGroup()
                                .addGroup(eRCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(eRCPanelLayout.createSequentialGroup()
                                        .addGap(174, 174, 174)
                                        .addComponent(jButton37))
                                    .addGroup(eRCPanelLayout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(jLabel67, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(eRCPanelLayout.createSequentialGroup()
                                .addGap(221, 221, 221)
                                .addComponent(jButton35))
                            .addGroup(eRCPanelLayout.createSequentialGroup()
                                .addGap(42, 42, 42)
                                .addGroup(eRCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(eRCPanelLayout.createSequentialGroup()
                                        .addComponent(jButton34)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(eRCPanelLayout.createSequentialGroup()
                                        .addGroup(eRCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel68, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel69, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(eRCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jTextField25, javax.swing.GroupLayout.DEFAULT_SIZE, 258, Short.MAX_VALUE)
                                            .addComponent(jTextField24))))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(eRCPanelLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(labelError7, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        eRCPanelLayout.setVerticalGroup(
            eRCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(eRCPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel65, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE)
                .addGap(38, 38, 38)
                .addGroup(eRCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(eRCPanelLayout.createSequentialGroup()
                        .addComponent(jLabel67)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton37)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(eRCPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, Short.MAX_VALUE)))
                .addGroup(eRCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel68)
                    .addComponent(jTextField24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(eRCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel69)
                    .addComponent(jTextField25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addComponent(labelError7, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(eRCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton35, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton34))
                .addGap(47, 47, 47))
        );

        cardsPanel.add(eRCPanel, "eRCPanel");

        bRCPanel.setBackground(new java.awt.Color(242, 235, 255));

        jLabel66.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel66.setText("Búsqueda en Registro de Clientes");

        jButton33.setText("Buscar");
        jButton33.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton33ActionPerformed(evt);
            }
        });

        jButton36.setText("Volver al menú principal");
        jButton36.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton36ActionPerformed(evt);
            }
        });

        jLabel70.setText("Cliente");

        jButton40.setText("Consultar registro completo");
        jButton40.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton40ActionPerformed(evt);
            }
        });

        jScrollPane6.setViewportView(jList6);

        jScrollPane7.setViewportView(jList7);

        labelError8.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        labelError8.setForeground(new java.awt.Color(255, 0, 51));
        labelError8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout bRCPanelLayout = new javax.swing.GroupLayout(bRCPanel);
        bRCPanel.setLayout(bRCPanelLayout);
        bRCPanelLayout.setHorizontalGroup(
            bRCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bRCPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel66, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(bRCPanelLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(bRCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bRCPanelLayout.createSequentialGroup()
                        .addGroup(bRCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(labelError8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, bRCPanelLayout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addGroup(bRCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 493, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(bRCPanelLayout.createSequentialGroup()
                                        .addGroup(bRCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(bRCPanelLayout.createSequentialGroup()
                                                .addComponent(jLabel70, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bRCPanelLayout.createSequentialGroup()
                                                .addGap(0, 0, Short.MAX_VALUE)
                                                .addComponent(jButton33)
                                                .addGap(50, 50, 50)))
                                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)))))
                        .addContainerGap(18, Short.MAX_VALUE))
                    .addGroup(bRCPanelLayout.createSequentialGroup()
                        .addComponent(jButton40)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                        .addComponent(jButton36)
                        .addGap(70, 70, 70))))
        );
        bRCPanelLayout.setVerticalGroup(
            bRCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bRCPanelLayout.createSequentialGroup()
                .addGroup(bRCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bRCPanelLayout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addComponent(jLabel70)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton33)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(bRCPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel66, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                        .addGap(38, 38, 38)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)))
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelError8, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(bRCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton36, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton40, javax.swing.GroupLayout.DEFAULT_SIZE, 64, Short.MAX_VALUE))
                .addGap(25, 25, 25))
        );

        cardsPanel.add(bRCPanel, "bRCPanel");

        bInventarioPanel.setBackground(new java.awt.Color(238, 200, 185));

        jLabel71.setFont(new java.awt.Font("Lucida Grande", 1, 36)); // NOI18N
        jLabel71.setText("Consulta de Inventario");

        jButton38.setText("Volver al menú principal");
        jButton38.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton38ActionPerformed(evt);
            }
        });

        jScrollPane5.setViewportView(jList5);

        labelError6.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        labelError6.setForeground(new java.awt.Color(255, 0, 51));
        labelError6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout bInventarioPanelLayout = new javax.swing.GroupLayout(bInventarioPanel);
        bInventarioPanel.setLayout(bInventarioPanelLayout);
        bInventarioPanelLayout.setHorizontalGroup(
            bInventarioPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bInventarioPanelLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(bInventarioPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bInventarioPanelLayout.createSequentialGroup()
                        .addComponent(jLabel71, javax.swing.GroupLayout.PREFERRED_SIZE, 432, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(bInventarioPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 482, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(bInventarioPanelLayout.createSequentialGroup()
                        .addComponent(labelError6, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                        .addComponent(jButton38)
                        .addGap(70, 70, 70))))
        );
        bInventarioPanelLayout.setVerticalGroup(
            bInventarioPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bInventarioPanelLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel71, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(bInventarioPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelError6, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton38, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25))
        );

        cardsPanel.add(bInventarioPanel, "bInventarioPanel");

        mainPanel.add(cardsPanel, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 665, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 528, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void dashButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dashButtonActionPerformed
        //Este action listener es del boton de Dashboard, va a llenar los datos que se despliega en el panel Dashboard        

        //Declaracion de objetos que se van a ocupar
        ArchivosBinarios ab = new ArchivosBinarios();
        String[] arrDash = null;
        Venta[] arrVenta = null;
        Producto[] arrProducto = null;
        
        try {
            //Se obtienen los arreglos con los datos necesarios
            arrDash = ab.mostrarDashboard();
            arrVenta = ab.llenarArregloVenta();
            arrProducto = ab.llenarArregloProducto();
        } catch (IOException ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        //Se establece en los labels la información que se obtuvo de llamar al metodo dash
        jLabel35.setText(arrDash[0]);
        jLabel36.setText(arrDash[1]);
        jLabel37.setText(arrDash[2]);
        jLabel38.setText(arrDash[3]);
        jLabel39.setText(arrDash[4]);
        
        //Se crea un nuevo arreglo de ventas, para que sea ordenada por el numero de productos vendidos (en todas las ventas)
        Venta[] arrVenta2 = new Venta[arrProducto.length];
        
        //Aquí se llena el segundo arreglo de ventas
        for (int x=0; x<arrProducto.length; x++){
            //Cada casilla del nuevo arreglo se llena con las ventas que se hayan realizado del mismo
            arrVenta2[x] = new Venta();
            arrVenta2[x].setProductoVenta(x+1);
            for (int y=0; y<arrVenta.length; y++){
                if (arrVenta[y].getProductoVenta() == (x+1)){
                    arrVenta2[x].setCantidadProductoVenta(arrVenta2[x].getCantidadProductoVenta() + arrVenta[y].getCantidadProductoVenta());
                }
            } 
        }
        
        //Se ordena el arreglo de ventas que contiene las ventas totales de cada producto.
        Arrays.sort(arrVenta2);

        //Se llena el modelo de la lista que se desplegara
        DefaultListModel dlm = new DefaultListModel();
        if(arrVenta2.length<5){
            for (int x=arrVenta2.length; x>0; x--){
                dlm.addElement("Nombre del producto: " + arrProducto[arrVenta2[x-1].getProductoVenta()-1].getNombreProducto() + "    Marca: " + arrProducto[arrVenta2[x-1].getProductoVenta()-1].getMarcaProducto() + "    Cantidad vendida: " + arrVenta2[x-1].getCantidadProductoVenta());
            }
        }
        else {
            for (int x=arrVenta2.length; x>arrVenta2.length-5; x--){
                dlm.addElement("Nombre del producto: " + arrProducto[arrVenta2[x-1].getProductoVenta()-1].getNombreProducto() + "    Marca: " + arrProducto[arrVenta2[x-1].getProductoVenta()-1].getMarcaProducto() + "    Cantidad vendida: " + arrVenta2[x-1].getCantidadProductoVenta());
            }
        }
        jList13.setModel(dlm);

        //Se despliega el dash panel
        CardLayout card = (CardLayout)cardsPanel.getLayout();
        card.show(cardsPanel, "dashPanel");
    }//GEN-LAST:event_dashButtonActionPerformed

    private void entregasButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_entregasButtonActionPerformed
        //Botón en el panel lateral que despliega el primer Menu de Entregas
        CardLayout card = (CardLayout)cardsPanel.getLayout();
        card.show(cardsPanel, "subMenuEntregas");
    }//GEN-LAST:event_entregasButtonActionPerformed

    private void ventasButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ventasButtonActionPerformed
        //Botón en el panel lateral que despielga el primer menu de ventas
        CardLayout card = (CardLayout)cardsPanel.getLayout();
        card.show(cardsPanel, "subMenuVentasPanel");
    }//GEN-LAST:event_ventasButtonActionPerformed

    private void inventarioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inventarioButtonActionPerformed
        //Boton que muestra el inventario con los datos actuales
        
        //Se resetea el label de errores
        labelError6.setText("");
        
        //Se declaran los objetos necesarios
        ArchivosBinarios ab = new ArchivosBinarios();
        Producto[] arrProducto = null;
        try {
            arrProducto = ab.llenarArregloProducto();
        } catch (IOException ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        //Se va a llenar la lista con los datos
        DefaultListModel dlm = new DefaultListModel();
        try{
        for (int x=0; x<arrProducto.length; x++){
        dlm.addElement("Codigo: " + arrProducto[x].getCodigoProducto() + "    Nombre: " + arrProducto[x].getNombreProducto() + "    Marca: " + arrProducto[x].getMarcaProducto() + "    Stock: " + arrProducto[x].getStockProducto() + "    Precio: " + arrProducto[x].getPrecioProducto());
        }
        jList5.setModel(dlm);
        }
        catch(Exception e){
            labelError6.setText("No hay productos guardados"); //En caso de que no haya productos registrados
        }

        //Se despliega el panel con los datos del inventario
        CardLayout card = (CardLayout)cardsPanel.getLayout();
        card.show(cardsPanel, "bInventarioPanel");
    }//GEN-LAST:event_inventarioButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //Boton que muestra el segundo sub menu de entregas
        CardLayout card = (CardLayout)cardsPanel.getLayout();
        card.show(cardsPanel, "subMenuEntregas2");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        //Este boton regresa al menú principal
        CardLayout card = (CardLayout)cardsPanel.getLayout();
        card.show(cardsPanel, "menuPrincipalPanel");
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        //Botón que lleva al panel para registrar un nuevo producto
        
        //Se resetean el label de errores y los text fields
        labelError1.setText("");
        jTextField6.setText("");
        jTextField5.setText("");
        jTextField4.setText("");
        jTextField3.setText("");
        jTextField2.setText("");
        
        
        //Se declaran los objetos necesarios 
        ArchivosBinarios ab = new ArchivosBinarios();
        Producto[] arrProducto = null;
        EntregaProveedor[] arrEntrega = null;
        try {
            arrProducto = ab.llenarArregloProducto();
            arrEntrega = ab.llenarArregloEntrega();
        } catch (IOException ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        //Se establece el código del  nuevo producto producto
        jLabel7.setText(arrProducto.length+1 + "");
        
        //Para mostrar el folio de la nueva entrega
        jLabel15.setText(arrEntrega.length+1 + "");
        
        //Se despliega el panel para registrar un nuevo producto
        CardLayout card = (CardLayout)cardsPanel.getLayout();
        card.show(cardsPanel, "rNPPanel");
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        //Botón que lleva al panel para registrar un producto registrado
        
        //Se resetean el label de errores y los text fields
        labelError2.setText("");
        jTextField7.setText("");
        jTextField8.setText("");
        
        //Se declaran los objetos necesarios 
        ArchivosBinarios ab = new ArchivosBinarios();
        EntregaProveedor[] arrEntrega = null;
        Producto[] arrProducto = null;
        try {
            arrProducto = ab.llenarArregloProducto();
            arrEntrega = ab.llenarArregloEntrega();
        } catch (IOException ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        //Se llenan los productos en la lista para que sea seleccionado el que es entregado
        DefaultListModel dlm = new DefaultListModel();
        try{
        for (int x=0; x<arrProducto.length; x++){
        dlm.addElement(arrProducto[x].getCodigoProducto() + "-" + arrProducto[x].getNombreProducto() + "-" + arrProducto[x].getMarcaProducto());
        }
        jList1.setModel(dlm);
        }
        catch(Exception e){
            //En caso de que haya algún error, sería porque no hay productos guardados, por lo que se le notifica al usuario
            labelError4.setText("No hay productos guardados");
        }
        
        //Para mostrar el folio de la nueva entrega
        jLabel23.setText(arrEntrega.length+1 + "");
        
        //Se despliega el panel para registrar un producto registrado
        CardLayout card = (CardLayout)cardsPanel.getLayout();
        card.show(cardsPanel, "rPPanel");
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        //Este boton regresa al menú principal
        CardLayout card = (CardLayout)cardsPanel.getLayout();
        card.show(cardsPanel, "menuPrincipalPanel");
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        //Botón que guarda lo ingresado en el panel para registrar la entrega de un nuevo producto, y se despliega el menú principal.
        
        //Se llama al método para guardar
        boolean status = metodoEntregaNuevoProducto();
        
        //Si los datos son correctos y se guardan, se despliega el menú principal
        if (status){
            CardLayout card = (CardLayout)cardsPanel.getLayout();
            card.show(cardsPanel, "menuPrincipalPanel");
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        //Botón que guarda lo ingresado en el panel para registrar la entrega de un nuevo producto, y se despliega el segundo sub menú de entregas
        
        //Se llama al método para guardar
        boolean status = metodoEntregaNuevoProducto();
        
        //Si los datos son correctos y se guardan, se despliega el segundo sub menú de entregas
        if (status){
            CardLayout card = (CardLayout)cardsPanel.getLayout();
            card.show(cardsPanel, "subMenuEntregas2");
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        //Este boton regresa al menú principal
        CardLayout card = (CardLayout)cardsPanel.getLayout();
        card.show(cardsPanel, "menuPrincipalPanel");
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        //Botón que guarda lo ingresado en el panel para registrar la entrega de un producto registrado, y se despliega el menú principal
        
        //Se llama al método para guardar
        boolean status = metodoEntregaProductoExistente();
        
        //Si los datos son correctos y se guardan, se despliega el menú principal
        if (status){
            CardLayout card = (CardLayout)cardsPanel.getLayout();
            card.show(cardsPanel, "menuPrincipalPanel");
        }
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        //Este boton regresa al menú principal
        CardLayout card = (CardLayout)cardsPanel.getLayout();
        card.show(cardsPanel, "menuPrincipalPanel");
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        //Botón que guarda lo ingresado en el panel para registrar la entrega de un producto registrado, y se despliega el segundo sub menu de entregas
        
        //Se llama al método para guardar
        boolean status = metodoEntregaProductoExistente();
        
        //Si los datos son correctos y se guardan, se despliega el menú principal
        if (status){
        CardLayout card = (CardLayout)cardsPanel.getLayout();
        card.show(cardsPanel, "subMenuEntregas2");  
        }  
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        //Este botón despliega el segundo sub menú de ventas
        CardLayout card = (CardLayout)cardsPanel.getLayout();
        card.show(cardsPanel, "subMenuVentas2Panel");
    }//GEN-LAST:event_jButton16ActionPerformed

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
        //Este boton regresa al menú principal
        CardLayout card = (CardLayout)cardsPanel.getLayout();
        card.show(cardsPanel, "menuPrincipalPanel");
    }//GEN-LAST:event_jButton18ActionPerformed

    private void jButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton19ActionPerformed
        //Botón que lleva al panel para registrar una venta con un cliente registrado

        //Se resetean el label de errores y los text fields
        labelError4.setText("");
        jTextField14.setText("");
        
        //Se declaran los objetos necesarios 
        ArchivosBinarios ab = new ArchivosBinarios();
        Venta[] arrVenta = null;
        try {
            arrVenta = ab.llenarArregloVenta();
        } catch (IOException ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        }
        //Folio de la nueva venta 
        jLabel49.setText(arrVenta.length+1 + "");
        
        //Se va a llenar la lista con los productos
        Producto[] arrProducto = null;
        try {
            arrProducto = ab.llenarArregloProducto();
        } catch (IOException ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        DefaultListModel dlm = new DefaultListModel();
        try{
        for (int x=0; x<arrProducto.length; x++){
        dlm.addElement(arrProducto[x].getCodigoProducto() + "-" + arrProducto[x].getNombreProducto() + "-" + arrProducto[x].getMarcaProducto());
        }
        jList3.setModel(dlm);
        }
        catch(Exception e){
            //En caso de que no haya productos registrados
            labelError4.setText("No hay productos guardados");
        }
        
        //Se va a llenar la lista con los clientes
        Cliente[] arrCliente = null;
        try {
            arrCliente = ab.llenarArregloCliente();
        } 
        catch (IOException ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        }
        DefaultListModel dlm2 = new DefaultListModel();
        try{
        for (int x=0; x<arrCliente.length; x++){
        dlm2.addElement(arrCliente[x].getCodigoCliente() + "-" + arrCliente[x].getNombreCliente() + " " + arrCliente[x].getApellidoCliente());
        }
        jList4.setModel(dlm2);
        }
        catch(Exception e){
            //En caso de que no haya clientes registrados
            labelError4.setText("No hay clientes guardados");
        }

        //Se despliega el panel para registro de venta con cliente registrado
        CardLayout card = (CardLayout)cardsPanel.getLayout();
        card.show(cardsPanel, "rVCPanel");
    }//GEN-LAST:event_jButton19ActionPerformed

    private void jButton20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton20ActionPerformed
        //Botón que lleva al panel para registrar una venta con un cliente sin registrar
        
        //Se resetean el label de errores y los text fields
        labelError3.setText("");
        jTextField17.setText("");
        
        //Se declaran los objetos necesarios
        ArchivosBinarios ab = new ArchivosBinarios();
        Venta[] arrVenta = null;
        Producto[] arrProducto = null;
        
        try {
            arrVenta = ab.llenarArregloVenta();
            arrProducto = ab.llenarArregloProducto();
        } catch (IOException ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        }
        //Folio de la nueva venta 
        jLabel58.setText(arrVenta.length+1 + "");
        
        //Se llena la lista con los productos
        DefaultListModel dlm = new DefaultListModel();
        try{
        for (int x=0; x<arrProducto.length; x++){
        dlm.addElement(arrProducto[x].getCodigoProducto() + "-" + arrProducto[x].getNombreProducto() + "-" + arrProducto[x].getMarcaProducto());
        }
        jList2.setModel(dlm);
        }
        catch(Exception e){
            //En caso de que no haya productos registrados
            labelError4.setText("No hay productos guardados");
        }
        
        //Se despliega el panel para guardar una venta sin cliente
        CardLayout card = (CardLayout)cardsPanel.getLayout();
        card.show(cardsPanel, "rVSCPanel");
    }//GEN-LAST:event_jButton20ActionPerformed

    private void jButton21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton21ActionPerformed
        //Este boton regresa al menú principal
        CardLayout card = (CardLayout)cardsPanel.getLayout();
        card.show(cardsPanel, "menuPrincipalPanel");
    }//GEN-LAST:event_jButton21ActionPerformed

    private void jButton22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton22ActionPerformed
        //Botón que guarda lo ingresado en el panel para registrar la venta a un cliente registrado, y despliega el menú principal
        
        //Se llama al método para guardar
        boolean status = metodoVentaClienteRegistrado();
        
        //Si los datos son correctos y se guardan, se despliega el menú principal
        if (status){
            CardLayout card = (CardLayout)cardsPanel.getLayout();
            card.show(cardsPanel, "menuPrincipalPanel");
        }
    }//GEN-LAST:event_jButton22ActionPerformed

    private void jButton23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton23ActionPerformed
        //Este boton regresa al menú principal
        CardLayout card = (CardLayout)cardsPanel.getLayout();
        card.show(cardsPanel, "menuPrincipalPanel");
    }//GEN-LAST:event_jButton23ActionPerformed

    private void jButton24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton24ActionPerformed
        //Botón que guarda lo ingresado en el panel para registrar la venta a un cliente registrado, y despliega el segundo sub menú de ventas
        
        //Se llama al método para guardar
        boolean status = metodoVentaClienteRegistrado();
        
        //Si los datos son correctos y se guardan, se despliega el seundo sub menú de ventas
        if (status){
            CardLayout card = (CardLayout)cardsPanel.getLayout();
        card.show(cardsPanel, "subMenuVentas2Panel");
        }
    }//GEN-LAST:event_jButton24ActionPerformed

    private void jButton25ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton25ActionPerformed
        //Botón que guarda lo ingresado en el panel para registrar la venta sin cliente registrado, y despliega el menú principal

        //Se llama al método para guardar
        boolean status = metodoVentaSinCliente();
        
        //Si los datos son correctos y se guardan, se despliega el menú principal
        if (status){
            CardLayout card = (CardLayout)cardsPanel.getLayout();
        card.show(cardsPanel, "menuPrincipalPanel"); 
        }
    }//GEN-LAST:event_jButton25ActionPerformed

    private void jButton26ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton26ActionPerformed
        //Este boton regresa al menú principal
        CardLayout card = (CardLayout)cardsPanel.getLayout();
        card.show(cardsPanel, "menuPrincipalPanel");
    }//GEN-LAST:event_jButton26ActionPerformed

    private void jButton27ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton27ActionPerformed
        //Botón que guarda lo ingresado en el panel para registrar la venta sin cliente registrado, y despliega el segundo sub menú de ventas
        
        //Se llama al método para guardar
        boolean status = metodoVentaSinCliente();
        
        //Si los datos son correctos y se guardan, se despliega el segundo sub menú de ventas
        if (status){
            CardLayout card = (CardLayout)cardsPanel.getLayout();
        card.show(cardsPanel, "subMenuVentas2Panel");
        }
    }//GEN-LAST:event_jButton27ActionPerformed

    private void jButton28ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton28ActionPerformed
        //Este boton se encarga de desplegar el historial del producto elegido
        
        //Se resetea la label del error
        labelError9.setText("");
        
        //Se declaran los objetos necesarios
        String line;
        int codigoProducto;
        String cliente;
        ArchivosBinarios ab = new ArchivosBinarios();
        
        //Se lee la opción de la lista seleccionado, y se despliegan sus atributos y ventas
        try{
            //Se declaran los objetos necesarios
            Venta[] arrVenta = ab.llenarArregloVenta();
            Cliente[] arrCliente = ab.llenarArregloCliente();
            Producto[] arrProducto = ab.llenarArregloProducto();
            
            line = jList9.getSelectedValue(); //Se lee lo seleccionado por el usuario
            String delimitador = "-"; //Se establece el delimitador entre la información para cada atributo
            String[] arregloTemporal = new String[3]; //Se crea arreglo temporal para guardar el resultado de .split
            arregloTemporal = line.split(delimitador); //Se parte la linea seleccionada
            codigoProducto = Integer.parseInt(arregloTemporal[0]); //Se establece el código del producto
        
            //Se despliegan los atributos del producto seleccionado
            DefaultListModel dlm = new DefaultListModel();
            dlm.addElement("Codigo: " + arrProducto[codigoProducto-1].getCodigoProducto() + "    Nombre: " + arrProducto[codigoProducto-1].getNombreProducto() + "    Marca: " + arrProducto[codigoProducto-1].getMarcaProducto() + "    Stock: " + arrProducto[codigoProducto-1].getStockProducto() + "    Precio: " + arrProducto[codigoProducto-1].getPrecioProducto());
            dlm.addElement("Ventas de este producto:");
            
            //Se busca en el arreglo de ventas, si el codigo del producto buscado es el de la venta, se va a desplegar. Además, se despliega el cliente al que se vendió
            for(int x=0; x<arrVenta.length; x++){
                if(arrVenta[x].getProductoVenta() == codigoProducto){
                    if(arrVenta[x].getClienteVenta() == -1)
                        cliente = "Cliente no registrado";
                    else
                        cliente = arrCliente[arrVenta[x].getClienteVenta()-1].getNombreCliente() + " " + arrCliente[arrVenta[x].getClienteVenta()-1].getApellidoCliente();

                    dlm.addElement("VENTA");
                    dlm.addElement("Folio de la venta: " + arrVenta[x].getFolioVenta() + "    Cliente al que se vendió: " + cliente + "    Fecha de la venta: " + arrVenta[x].getFechaVenta() + "    Cantidad vendida: " + arrVenta[x].getCantidadProductoVenta() + "    Valor de la venta: " + arrVenta[x].getValorVenta());
                }
            }
            jList10.setModel(dlm);
        }
        catch(Exception e){
            //Si no se elige un producto, se despliega en el label de errores
           labelError9.setText("Eliga un producto");
        }  
    }//GEN-LAST:event_jButton28ActionPerformed

    private void jButton30ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton30ActionPerformed
        //Botón que lleva al panel de consulta de registro de clientes
        
        //Se resetea el label de errores
        labelError8.setText("");
        
        //Se declaran los objetos necesarios
        ArchivosBinarios ab = new ArchivosBinarios();
        Cliente[] arrCliente = null;
        try {
            arrCliente = ab.llenarArregloCliente();
        } catch (IOException ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        //Se prepara la lista que se va a desplegar
        DefaultListModel dlm = new DefaultListModel();
        try{
            //Se muestran los clientes que estan registrados
            for (int x=0; x<arrCliente.length; x++){
            dlm.addElement(arrCliente[x].getCodigoCliente() + "-" + arrCliente[x].getNombreCliente() + " " + arrCliente[x].getApellidoCliente());
            }
            jList7.setModel(dlm);
        }
        catch(Exception e){
            labelError8.setText("No hay clientes guardados");
        }

        //Se despliega el panel de consulta de registro de clientes
        CardLayout card = (CardLayout)cardsPanel.getLayout();
        card.show(cardsPanel, "bRCPanel");
    }//GEN-LAST:event_jButton30ActionPerformed

    private void jButton32ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton32ActionPerformed
        //Este boton regresa al menú principal
        CardLayout card = (CardLayout)cardsPanel.getLayout();
        card.show(cardsPanel, "menuPrincipalPanel");
    }//GEN-LAST:event_jButton32ActionPerformed

    private void jButton34ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton34ActionPerformed
        //Este boton regresa al menú principal
        CardLayout card = (CardLayout)cardsPanel.getLayout();
        card.show(cardsPanel, "menuPrincipalPanel");
    }//GEN-LAST:event_jButton34ActionPerformed

    private void jButton35ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton35ActionPerformed
        //Este boton actualiza los cambios hechos en los datos de un cliente
        
        //Se resetea el label de errores
        labelError7.setText("");
        
        //Se declaran los objetos necesarios
        ArchivosBinarios ab = new ArchivosBinarios();
        String line;
        int codigoCliente = -2;
        String emailCliente = null;
        String telefonoCliente = null;
        Cliente[] arrCliente = null;
        boolean status = true;
        
        try{
            Exception e = new Exception("");
            
            line = jList8.getSelectedValue(); //Se lee la opción elegida
            String delimitador = "-"; //Se establece el delimitador entre la información para cada atributo
            String[] arregloTemporal = new String[3]; //Se crea arreglo temporal para guardar el resultado de .split
            arregloTemporal = line.split(delimitador); //Se parte la linea
            codigoCliente = Integer.parseInt(arregloTemporal[0]); //Se establece el código del cliente en cuestión
            
            //Se validan los nuevos datos del cliente introducidos
            emailCliente = jTextField24.getText(); 
            if (emailCliente.equals("")){
                status = false;
                throw e;
            }
            telefonoCliente = jTextField25.getText();
            if (telefonoCliente.equals("")){
                status = false;
                throw e;
            }
        }
        catch(Exception e){
           labelError7.setText("Llene todos los campos");
           status = false;
        }
        
        //Si los datos introducidos son correctos, se guardan
        if (status){
            try {
                arrCliente = ab.llenarArregloCliente();
            } catch (IOException ex) {
                Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
            }
            arrCliente[codigoCliente-1].setEmailCliente(emailCliente);
            arrCliente[codigoCliente-1].setTelefonoCliente(telefonoCliente);
            try {
                ab.guardarArchCliente(arrCliente);
            } catch (IOException ex) {
                Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            //Se despliega el menú principal
            CardLayout card = (CardLayout)cardsPanel.getLayout();
            card.show(cardsPanel, "menuPrincipalPanel");
        }  
    }//GEN-LAST:event_jButton35ActionPerformed

    private void jButton33ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton33ActionPerformed
        //Este boton se encarga de desplegar el historial del cliente elegido
        
        //Se resetea el label de errores
        labelError8.setText("");
        
        //Se declaran los objetos necesarios
        int codigoCliente;
        String line;
        ArchivosBinarios ab = new ArchivosBinarios();
        Cliente[] arrCliente;
          
        try{
            //Se declaran los objetos necesarios
            arrCliente = ab.llenarArregloCliente();
            Venta[] arrVenta = ab.llenarArregloVenta();
            Producto[] arrProd = ab.llenarArregloProducto();
            
            //Se obtinene el código del producto vendido
            line = jList7.getSelectedValue();
            String delimitador = "-"; //Se establece el delimitador entre la información para cada atributo
            String[] arregloTemporal = new String[2]; //Se crea arreglo temporal para guardar el resultado de .split
            arregloTemporal = line.split(delimitador); //Se parte la linea
            codigoCliente = Integer.parseInt(arregloTemporal[0]); //Se establece el código del cliente
            
            //Se despliegan los atributos del producto seleccionado
            DefaultListModel dlm = new DefaultListModel();
            dlm.addElement("Codigo: " + arrCliente[codigoCliente-1].getCodigoCliente() + "    Nombre: " + arrCliente[codigoCliente-1].getNombreCliente() + "    Apellido: " + arrCliente[codigoCliente-1].getApellidoCliente() + "    Email: " + arrCliente[codigoCliente-1].getEmailCliente() + "    Telefono: " + arrCliente[codigoCliente-1].getTelefonoCliente() + "    Numero de compras: " + arrCliente[codigoCliente-1].getNumeroComprasCliente() + "    Valor de compras: $" + arrCliente[codigoCliente-1].getValorComprasCliente());
            dlm.addElement("Compras del cliente:");
            
            //Se busca en el arreglo de ventas, si el codigo del cliente buscado es el de la venta, se va a desplegar.
            for(int x=0; x<arrVenta.length; x++){
                if(arrVenta[x].getClienteVenta() == codigoCliente){
                    dlm.addElement("VENTA");
                    dlm.addElement("Folio de la venta: " + arrVenta[x].getFolioVenta() + "    Fecha de la venta: " + arrVenta[x].getFechaVenta() + "    Producto vendido: " + arrProd[arrVenta[x].getProductoVenta()-1].getNombreProducto() + "    Marca Producto: " + arrProd[arrVenta[x].getProductoVenta()-1].getMarcaProducto() + "    Cantidad vendida: " + arrVenta[x].getCantidadProductoVenta() + "    Valor de la venta: " + arrVenta[x].getValorVenta());
                }
            }
            jList6.setModel(dlm); //Se despliega la lista
        }
        catch(Exception e){
            labelError8.setText("Eliga un cliente"); //En caso de que no se eliga un cliente
        } 
    }//GEN-LAST:event_jButton33ActionPerformed

    private void jButton40ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton40ActionPerformed
        //Este boton despliega un archivo de excel con todos los registros de clientes
        
        //Se declaran las variables necesarias
        Cliente[] arrCliente = null;
        final String NOMBRE = "RegistroClientes.xlsx";
        XSSFWorkbook workbook = new XSSFWorkbook();
        XSSFSheet sheet = workbook.createSheet("Registro de Clientes Magni Farmacias");
        ArchivosBinarios ab = new ArchivosBinarios();
        try {

            arrCliente = ab.llenarArregloCliente();
        } catch (IOException ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        }
        String[][] matriz = new String[arrCliente.length+1][7];
        
        //Se declaran las cabezas de las columnas
        matriz[0][0] = "Codigo del cliente";
        matriz[0][1] = "Nombre del cliente";
        matriz[0][2] = "Apellido del cliente";
        matriz[0][3] = "Telefono del cliente";
        matriz[0][4] = "E-Mail del cliente";
        matriz[0][5] = "Numero de compras del cliente";
        matriz[0][6] = "Valor total de compras del cliente";

        //Se agregan todos los datos de todas las entregas registradas
        for (int x=1; x<arrCliente.length+1; x++){
            matriz[x][0] = arrCliente[x-1].getCodigoCliente() +"";
            matriz[x][1] = arrCliente[x-1].getNombreCliente() +"";
            matriz[x][2] = arrCliente[x-1].getApellidoCliente() +"";
            matriz[x][3] = arrCliente[x-1].getTelefonoCliente() +"";
            matriz[x][4] = arrCliente[x-1].getEmailCliente() +"";
            matriz[x][5] = arrCliente[x-1].getNumeroComprasCliente() +"";
            matriz[x][6] = arrCliente[x-1].getValorComprasCliente() +"";
        }

        int rowNum = 0;

        for (Object[] datatype : matriz) {
            Row row = sheet.createRow(rowNum++);
            int colNum = 0;
            for (Object field : datatype) {
                Cell cell = row.createCell(colNum++);
                if (field instanceof String) {
                    cell.setCellValue((String) field);
                } else if (field instanceof Integer) {
                    cell.setCellValue((Integer) field);
                }
            }
        }
        
        //Se crea y se abre el excel
        try {
            FileOutputStream outputStream = new FileOutputStream(NOMBRE);
            workbook.write(outputStream);
            workbook.close();
            Desktop.getDesktop().open(new File("RegistroClientes.xlsx"));
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton40ActionPerformed

    private void jButton29ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton29ActionPerformed
        //Este boton regresa al menú principal
        CardLayout card = (CardLayout)cardsPanel.getLayout();
        card.show(cardsPanel, "menuPrincipalPanel");
    }//GEN-LAST:event_jButton29ActionPerformed

    private void jButton36ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton36ActionPerformed
        //Este boton regresa al menú principal
        CardLayout card = (CardLayout)cardsPanel.getLayout();
        card.show(cardsPanel, "menuPrincipalPanel");
    }//GEN-LAST:event_jButton36ActionPerformed

    private void jButton38ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton38ActionPerformed
        //Este boton regresa al menú principal
        CardLayout card = (CardLayout)cardsPanel.getLayout();
        card.show(cardsPanel, "menuPrincipalPanel");
    }//GEN-LAST:event_jButton38ActionPerformed

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        //Botón que lleva al panel de consulta de registro de ventas
        
        //Se reseta el label de error del panel en cuestión
        labelError9.setText("");
        
        //Se declaran los objetos necesarios
        ArchivosBinarios ab = new ArchivosBinarios();
        Producto[] arrProducto = null;
        try {
            arrProducto = ab.llenarArregloProducto();
        } catch (IOException ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        //Se prepara el modelo que se va a desplegar para que se pueda elegir en el panel de historial de ventas
        DefaultListModel dlm = new DefaultListModel();
        try{
        for (int x=0; x<arrProducto.length; x++){
        dlm.addElement(arrProducto[x].getCodigoProducto() + "-" + arrProducto[x].getNombreProducto() + "-" + arrProducto[x].getMarcaProducto());
        }
        jList9.setModel(dlm);
        }
        catch(Exception e){
            //En caso de que no haya productos registrados
            labelError9.setText("No hay productos registrados");
        }
        
        //Se muestra el panel de busqueda de historial de ventas
        CardLayout card = (CardLayout)cardsPanel.getLayout();
        card.show(cardsPanel, "bHVCPanel");
    }//GEN-LAST:event_jButton17ActionPerformed

    private void clientesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clientesButtonActionPerformed
        //Boton que lleva al primer sub menú de clientes
        CardLayout card = (CardLayout)cardsPanel.getLayout();
        card.show(cardsPanel, "subMenuClientesPanel");
    }//GEN-LAST:event_clientesButtonActionPerformed

    private void jButton31ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton31ActionPerformed
        //Boton que lleva al segundo sub menú de clientes
        CardLayout card = (CardLayout)cardsPanel.getLayout();
        card.show(cardsPanel, "subMenuClientesPanel2");
    }//GEN-LAST:event_jButton31ActionPerformed

    private void jButton43ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton43ActionPerformed
        //Boton que lleva al panel para registrar un nuevo cliente
        
        //Se resetea el label de errores y los demás TextFields
        labelError5.setText("");
        jTextField18.setText("");
        jTextField26.setText("");
        jTextField27.setText("");
        jTextField15.setText("");
        
        //Se declaran los objetos necesarios
        ArchivosBinarios ab = new ArchivosBinarios();
        Cliente[] arrCliente = null;
        try {
            arrCliente = ab.llenarArregloCliente();
        } catch (IOException ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        //Se establece el código del nuevo cliente
        jLabel77.setText(arrCliente.length+1 + "");
        
        //Se despliega el panel para registrar un nuevo cliente
        CardLayout card = (CardLayout)cardsPanel.getLayout();
        card.show(cardsPanel, "rNCPanel");
    }//GEN-LAST:event_jButton43ActionPerformed

    private void jButton44ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton44ActionPerformed
        //Boton que lleva al panel para editar la información de un cliente ya registrado
        
        //Se resetea el label de error y los demás TextFields
        labelError7.setText("");
        jTextField24.setText("");
        jTextField25.setText("");

        //Se declaran los objetos necesarios
        ArchivosBinarios ab = new ArchivosBinarios();
        Cliente[] arrCliente = null;
        try {
            arrCliente = ab.llenarArregloCliente();
        } catch (IOException ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        //Se prepara el modelo que se va a desplegar para que se pueda elegir en el panel de registro de clientes
        DefaultListModel dlm = new DefaultListModel();
        try{
        for (int x=0; x<arrCliente.length; x++){
        dlm.addElement(arrCliente[x].getCodigoCliente() + "-" + arrCliente[x].getNombreCliente() + " " + arrCliente[x].getApellidoCliente());
        }
        jList8.setModel(dlm);
        }
        catch(Exception e){
            labelError7.setText("No hay clientes guardados"); //En caso de que no haya clientes registrados
        }

        //Se despliega el panel para editar la información de un cliente 
        CardLayout card = (CardLayout)cardsPanel.getLayout();
        card.show(cardsPanel, "eRCPanel");
        
    }//GEN-LAST:event_jButton44ActionPerformed

    private void jButton45ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton45ActionPerformed
        //Este boton regresa al menú principal
        CardLayout card = (CardLayout)cardsPanel.getLayout();
        card.show(cardsPanel, "menuPrincipalPanel");
    }//GEN-LAST:event_jButton45ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        //Este boton regresa al menú principal
        CardLayout card = (CardLayout)cardsPanel.getLayout();
        card.show(cardsPanel, "menuPrincipalPanel");
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton46ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton46ActionPerformed
        //Boton que registra la información de un nuevo cliente, y despliega el menú principal
        
        //Se resetea el label de errores
        labelError5.setText("");
        
        //Se declaran los objetos necesarios
        String nombreCliente = null;
        String apellidoCliente = null;
        String telefonoCliente = null;
        String emailCliente = null;
        boolean status = true;
        
        try{
            Exception e = new Exception("");
            
            //Se validan la información introducida
            nombreCliente = jTextField18.getText();
            if(nombreCliente.equals(""))
                throw e;
            apellidoCliente = jTextField26.getText();
            if(apellidoCliente.equals(""))
                throw e;
            telefonoCliente = jTextField27.getText();
            if(telefonoCliente.equals(""))
                throw e;
            emailCliente = jTextField15.getText();
            if(emailCliente.equals(""))
                throw e;
        }
        catch(Exception e){
            labelError5.setText("Llene todos los campos");
            status = false;
        }
        
        //Si los datos ingresados son correctos, se guardan
        if (status){
            Cliente cl = new Cliente();
            try {
                cl.nuevoCliente(nombreCliente, apellidoCliente, telefonoCliente, emailCliente);
            } catch (IOException ex) {
                Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            //Se despliega el menú principal
            CardLayout card = (CardLayout)cardsPanel.getLayout();
            card.show(cardsPanel, "menuPrincipalPanel");
        }  
    }//GEN-LAST:event_jButton46ActionPerformed

    private void jButton37ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton37ActionPerformed
        //Boton que despliega los datos del cliente que se selecciona en el planel para editar información de clientes
        
        //Se resetea el label de errores
        labelError7.setText("");
        
        //Se declaran los objetos necesarios
        int codigoCliente;
        String line;
        boolean status = true;
        ArchivosBinarios ab = new ArchivosBinarios();
        Cliente arrCliente[] = null;
        try {
            arrCliente = ab.llenarArregloCliente();
        } catch (IOException ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try{
            line = jList8.getSelectedValue(); //Se obtinene el código del producto vendido
            String delimitador = "-"; //Se establece el delimitador entre la información para cada atributo
            String[] arregloTemporal = new String[2]; //Se crea arreglo temporal para guardar el resultado de .split
            arregloTemporal = line.split(delimitador); //Se parte la linea
            codigoCliente = Integer.parseInt(arregloTemporal[0]); //Se establece el código del cliente
            jTextField24.setText(arrCliente[codigoCliente-1].getEmailCliente()); //Se despliega el email del cliente
            jTextField25.setText(arrCliente[codigoCliente-1].getTelefonoCliente()); //Se despliega el telefono del cliente
        }
        catch(Exception e){
            labelError7.setText("Eliga un cliente"); //En caso de que no se haya elegido un cliente
        }
    }//GEN-LAST:event_jButton37ActionPerformed

    private void jButton39ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton39ActionPerformed
        //Este boton se encarga de desplegar el historial del producto elegido
        
        //Se resetea la label del error
        labelError10.setText("");
        
        //Se declaran los objetos necesarios
        String line;
        int codigoProducto;
        String cliente = null;
        ArchivosBinarios ab = new ArchivosBinarios();
        
        //Se lee la opción de la lista seleccionado, y se despliegan sus atributos y entregas
        try{
            //Se declaran los objetos necesarios
            NumberFormatException eNum = new NumberFormatException("");
            Producto[] arrProducto = ab.llenarArregloProducto();
            EntregaProveedor[] arrEntrega = ab.llenarArregloEntrega();
            
            line = jList11.getSelectedValue(); //Se lee lo seleccionado por el usuario
            String delimitador = "-"; //Se establece el delimitador entre la información para cada atributo
            String[] arregloTemporal = new String[3]; //Se crea arreglo temporal para guardar el resultado de .split
            arregloTemporal = line.split(delimitador); //Se parte la linea seleccionada
            codigoProducto = Integer.parseInt(arregloTemporal[0]); //Se obtiene el codigo del producto seleccionado
            
            //Se despliegan los atributos del producto seleccionado
            DefaultListModel dlm = new DefaultListModel();
            dlm.addElement("Codigo: " + arrProducto[codigoProducto-1].getCodigoProducto() + "    Nombre: " + arrProducto[codigoProducto-1].getNombreProducto() + "    Marca: " + arrProducto[codigoProducto-1].getMarcaProducto() + "    Stock: " + arrProducto[codigoProducto-1].getStockProducto() + "    Precio: " + arrProducto[codigoProducto-1].getPrecioProducto());
            dlm.addElement("Entregas de este producto:");
            
            //Se busca en el arreglo de entregas, si el codigo del producto buscado es el de la entrega, se va a desplegar
            for(int x=0; x<arrEntrega.length; x++){
                if(arrEntrega[x].getProductoEntrega() == codigoProducto){
                    dlm.addElement("ENTREGA");
                    dlm.addElement("Folio de la entrega: " + arrEntrega[x].getFolioEntrega() + "    Proveedor: " + arrEntrega[x].getNombreProveedor() + "    Fecha de la entrega: " + arrEntrega[x].getFechaEntrega() + "    Cantidad entregada: " + arrEntrega[x].getCantidadProductoEntrega() + "    Valor de la entrega: " + arrEntrega[x].getValorEntrega());
                }
            }
            jList12.setModel(dlm);
        }
        //Si no se elige un producto, se despliega en el label de errores
        catch(Exception e){
           labelError10.setText("Eliga un producto");
        }
    }//GEN-LAST:event_jButton39ActionPerformed

    private void jButton48ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton48ActionPerformed
        //Este boton regresa al menú principal
        CardLayout card = (CardLayout)cardsPanel.getLayout();
        card.show(cardsPanel, "menuPrincipalPanel"); 
    }//GEN-LAST:event_jButton48ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        //Botón que lleva al panel de consulta de registro de entregas

        //Se reseta el label de error del panel en cuestión
        labelError10.setText("");
        
        //Se declaran los objetos necesarios
        ArchivosBinarios ab = new ArchivosBinarios();
        Producto[] arrProducto = null;
        try {
            arrProducto = ab.llenarArregloProducto();
        } catch (IOException ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        //Se prepara el modelo que se va a desplegar para que se pueda elegir en el panel de historial de entregas
        DefaultListModel dlm = new DefaultListModel();
        try{
            //Se muestran los productos que estan registrados
            for (int x=0; x<arrProducto.length; x++){
            dlm.addElement(arrProducto[x].getCodigoProducto() + "-" + arrProducto[x].getNombreProducto() + "-" + arrProducto[x].getMarcaProducto());
            }
            jList11.setModel(dlm);
        }
        catch(Exception e){
            //En caso de que no haya productos registrados
            labelError10.setText("No hay productos registrados");
        }

        //Se muestra el panel de busqueda de historial de entregas
        CardLayout card = (CardLayout)cardsPanel.getLayout();
        card.show(cardsPanel, "bHECPanel");
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton47ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton47ActionPerformed
        //Este boton despliega un archivo de excel con todos los registros de entregas
        
        //Se declaran los objetos necesarios
        EntregaProveedor[] arrEntrega = null;
        Producto[] arrProducto = null;
        ArchivosBinarios ab = new ArchivosBinarios();
        final String NOMBRE = "RegistroEntregas.xlsx";
        XSSFWorkbook workbook = new XSSFWorkbook();
        XSSFSheet sheet = workbook.createSheet("Registro de Entregas Magni Farmacias");
        try {
            arrEntrega = ab.llenarArregloEntrega();
            arrProducto = ab.llenarArregloProducto();
        } catch (IOException ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        }
        String[][] matriz = new String[arrEntrega.length+1][8];
        
        //Se declaran las cabezas de las columnas
        matriz[0][0] = "Folio de la entrega";
        matriz[0][1] = "Código Producto Entregado";
        matriz[0][2] = "Nombre Producto Entregado";
        matriz[0][3] = "Marca Producto Entregado";
        matriz[0][4] = "Nombre proveedor";
        matriz[0][5] = "Fecha entrega";
        matriz[0][6] = "Cantidad entregada";
        matriz[0][7] = "Valor entrega";
        
        //Se agregan todos los datos de todas las entregas registradas
        for (int x=1; x<arrEntrega.length+1; x++){
            matriz[x][0] = arrEntrega[x-1].getFolioEntrega() +"";
            matriz[x][1] = arrEntrega[x-1].getProductoEntrega() +"";
            matriz[x][2] = arrProducto[arrEntrega[x-1].getProductoEntrega()-1].getNombreProducto();
            matriz[x][3] = arrProducto[arrEntrega[x-1].getProductoEntrega()-1].getMarcaProducto();
            matriz[x][4] = arrEntrega[x-1].getNombreProveedor();
            matriz[x][5] = arrEntrega[x-1].getFechaEntrega();
            matriz[x][6] = arrEntrega[x-1].getCantidadProductoEntrega()+"";
            matriz[x][7] = arrEntrega[x-1].getValorEntrega()+"";
            }

        int rowNum = 0;

        for (Object[] datatype : matriz) {
            Row row = sheet.createRow(rowNum++);
            int colNum = 0;
            for (Object field : datatype) {
                Cell cell = row.createCell(colNum++);
                if (field instanceof String) {
                    cell.setCellValue((String) field);
                } else if (field instanceof Integer) {
                    cell.setCellValue((Integer) field);
                }
            }
        }
        
        //Se crea el excel y se abre
        try {
            FileOutputStream outputStream = new FileOutputStream(NOMBRE);
            workbook.write(outputStream);
            workbook.close();
            Desktop.getDesktop().open(new File("RegistroEntregas.xlsx"));
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton47ActionPerformed

    private void jButton41ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton41ActionPerformed
        //Este boton despliega un archivo de excel con todos los registros de entregas
        
        //Se declaran los objetos necesarios
        Venta[] arrVenta = null;
        Producto[] arrProducto = null;
        Cliente[] arrCliente = null;
        final String NOMBRE = "RegistroVentas.xlsx";
        XSSFWorkbook workbook = new XSSFWorkbook();
        XSSFSheet sheet = workbook.createSheet("Registro de Ventas Magni Farmacias");
        ArchivosBinarios ab = new ArchivosBinarios();
        
        try {
            arrVenta = ab.llenarArregloVenta();
            arrProducto = ab.llenarArregloProducto();
            arrCliente = ab.llenarArregloCliente();
        } catch (IOException ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        String[][] matriz = new String[arrVenta.length+1][10];
        
        //Se declaran las cabezas de las columnas
        matriz[0][0] = "Folio de la venta";
        matriz[0][1] = "Código Producto Vendido";
        matriz[0][2] = "Nombre Producto Vendido";
        matriz[0][3] = "Marca Producto Vendido";
        matriz[0][4] = "Código del cliente";
        matriz[0][5] = "Nombre del cliente";
        matriz[0][6] = "Apellido del cliente";
        matriz[0][7] = "Fecha venta";
        matriz[0][8] = "Cantidad vendida";
        matriz[0][9] = "Valor venta";
        
        //Se agregan todos los datos de todas las entregas registradas
        for (int x=1; x<arrVenta.length+1; x++){
            matriz[x][0] = arrVenta[x-1].getFolioVenta() +"";
            matriz[x][1] = arrVenta[x-1].getProductoVenta() +"";
            matriz[x][2] = arrProducto[arrVenta[x-1].getProductoVenta()-1].getNombreProducto();
            matriz[x][3] = arrProducto[arrVenta[x-1].getProductoVenta()-1].getMarcaProducto();
            matriz[x][4] = arrVenta[x-1].getClienteVenta() +"";
            if(arrVenta[x-1].getClienteVenta() == -1){ //En caso de que no haya habido cliente registrado
                matriz[x][5] = "Cliente no registrado";
                matriz[x][6] = "Cliente no registrado";
            }
            else{
                matriz[x][5] = arrCliente[arrVenta[x-1].getClienteVenta()-1].getNombreCliente();
                matriz[x][6] = arrCliente[arrVenta[x-1].getClienteVenta()-1].getApellidoCliente();
            }
            matriz[x][7] = arrVenta[x-1].getFechaVenta();
            matriz[x][8] = arrVenta[x-1].getCantidadProductoVenta()+"";
            matriz[x][9] = arrVenta[x-1].getValorVenta()+"";
            }

        int rowNum = 0;

        for (Object[] datatype : matriz) {
            Row row = sheet.createRow(rowNum++);
            int colNum = 0;
            for (Object field : datatype) {
                Cell cell = row.createCell(colNum++);
                if (field instanceof String) {
                    cell.setCellValue((String) field);
                } else if (field instanceof Integer) {
                    cell.setCellValue((Integer) field);
                }
            }
        }
        
        //Se crea el excel y se abre
        try {
            FileOutputStream outputStream = new FileOutputStream(NOMBRE);
            workbook.write(outputStream);
            workbook.close();
            Desktop.getDesktop().open(new File("RegistroVentas.xlsx"));
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        } 
    }//GEN-LAST:event_jButton41ActionPerformed

    //Métodos necesarios
    
    private boolean metodoEntregaNuevoProducto(){
        //Este método guarda lo ingresado en el panel para registrar la entrega de un nuevo producto
        
        //Se resetea el label de errores
        labelError1.setText("");
        
        //Se declaran los objetos necesarios
        String nombreProd = null;
        String marcaProd = null;
        double precioProd = 0.0;
        int cantidadProd = 0;
        String nombreProveedor = null;
        String fechaEntrega = null;
        
        //Variable de control que en caso de que algún dato ingresado sea incorrecto, hace que no se guarde la información y se despliegue un error
        boolean status = true;
        
        //Se leen y se validan los datos de los textfields: en caso de que no tengan el formato correcto (o están vacíos) se lanza una excepción y se despliega un error
        try{
            //Se declaran las excepciones
            Exception e = new Exception("");
            NumberFormatException eNum = new NumberFormatException("");
            
        nombreProd = jTextField6.getText();
        if(nombreProd.equals(""))
            throw e;
        marcaProd = jTextField5.getText();
        if(marcaProd.equals(""))
            throw e;
        
        precioProd = Double.parseDouble(jTextField4.getText());
        //El precio no puede ser negativo o 0
        if (precioProd <= 0)
            throw eNum;
        
        cantidadProd = Integer.parseInt(jTextField3.getText());
        //La cantidad no puede ser negativa o 0
        if (cantidadProd <= 0)
            throw eNum;
        
        nombreProveedor = jTextField2.getText();
        if(nombreProveedor.equals(""))
            throw e;
        
        Date date = jDateChooser1.getDate();
                fechaEntrega = DateFormat.getDateInstance().format(date);
        if(fechaEntrega.equals(""))
            throw e;
        
        }
        catch(NumberFormatException errorNum){
           labelError1.setText("Error al ingresar un número");
           status = false;
        }
        catch(Exception e){
            labelError1.setText("Llene todos los campos");
            status = false;
        }
        
        //Si los datos son correctos, se guardan
        if (status){
            //Mandarlo al método correspondiente para guardar la información
            EntregaProveedor eP = new EntregaProveedor();
            try {
                eP.entregaNuevoProducto(nombreProd, marcaProd, precioProd, cantidadProd, nombreProveedor, fechaEntrega);
            } catch (IOException ex) {
                Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        return status;
    }
    
    private boolean metodoEntregaProductoExistente(){
        //Este método guarda lo ingresado en el panel para registrar la entrega de un producto existente
        
        //Se resetea el label de errores
        labelError2.setText("");
        
        //Se declaran los objetos necesarios
        String line;
        int codigoProducto = -1;
        int cantidadProd = 0;
        String nombreProveedor = null;
        String fechaEntrega = null;
        
        //Variable de control que en caso de que algún dato ingresado sea incorrecto, hace que no se guarde la información y se despliegue un error
        boolean status = true;
        
        try{
            Exception e = new Exception("");
            NumberFormatException eNum = new NumberFormatException("");
            line = jList1.getSelectedValue(); //Se lee la opción seleccionada en la lista
            String delimitador = "-"; //Se establece el delimitador entre la información para cada atributo
            String[] arregloTemporal = new String[3]; //Se crea arreglo temporal para guardar el resultado de .split
            arregloTemporal = line.split(delimitador); //Se parte la opción elegida para obtener el codigo del producto
            codigoProducto = Integer.parseInt(arregloTemporal[0]); //Se obtiene el codigo del producto seleccionado
            
            //Se validan los datos ingresados por el usuario
            cantidadProd = Integer.parseInt(jTextField7.getText());
            if (cantidadProd <= 0)
                throw eNum;
            nombreProveedor = jTextField8.getText();
            if(nombreProveedor.equals(""))
                throw e;
            Date date = jDateChooser2.getDate();
                fechaEntrega = DateFormat.getDateInstance().format(date);
            if(fechaEntrega.equals(""))
                throw e;
        }
        //Si hay algún dato mal ingresado o no se ingresa, se despliega un error
        catch(NumberFormatException errorNum){
           labelError2.setText("Error al ingresar un número");
           status = false;
        }
        catch(Exception e){
           labelError2.setText("Llene todos los campos");
           status = false;
        }
        
        //Si los datos son correctos, se guardan
        if (status){
            EntregaProveedor eP = new EntregaProveedor();
            try {
                eP.entregaProducto(codigoProducto, cantidadProd, nombreProveedor, fechaEntrega);
            } catch (IOException ex) {
                Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        return status;
    }
    
    private boolean metodoVentaClienteRegistrado(){
        //Este método guarda lo ingresado en el panel para registrar la venta a un cliente registrado
        
        //Se resetea el label de errores
        labelError4.setText("");
        
        //Se declaran los objetos necesarios
        String line1;
        String line2;
        int codigoCliente = -2;
        int codigoProducto = -1;
        int cantidadVendida = 0;
        String fechaVenta = null;
        boolean status = true;
        
        try{
            Exception e = new Exception("");
            NumberFormatException eNum = new NumberFormatException("");
            
            //Se obtinene el código del producto vendido
            line1 = jList3.getSelectedValue();
            
            String delimitador1 = "-"; //Se establece el delimitador entre la información para cada atributo
            String[] arregloTemporal1 = new String[3]; //Se crea arreglo temporal para guardar el resultado de .split
            arregloTemporal1 = line1.split(delimitador1); 
            codigoProducto = Integer.parseInt(arregloTemporal1[0]); //Se obtiene el código del producto
            line2 = jList4.getSelectedValue(); //Se obtinene el código del cliente al que se vendió
            String delimitador2 = "-"; //Se establece el delimitador entre la información para cada atributo
            String[] arregloTemporal2 = new String[2]; //Se crea arreglo temporal para guardar el resultado de .split
            arregloTemporal2 = line2.split(delimitador2); 
            codigoCliente = Integer.parseInt(arregloTemporal2[0]); //Se obtiene el código del cliente
            cantidadVendida = Integer.parseInt(jTextField14.getText()); //Se obtiene la cantidad vendida
        
            if (cantidadVendida <= 0) //Se valida que la cantidad vendida sea mayor que 0
                throw eNum;
            ArchivosBinarios ab = new ArchivosBinarios();
            Producto[] arrPro = ab.llenarArregloProducto();
            if (arrPro[codigoProducto-1].getStockProducto() < cantidadVendida) //Se valida que la cantidad vendida no sea mayor que el stock del producto
                throw eNum;
            
            //Se obtiene y se valida la fecha
            Date date = jDateChooser3.getDate();
                fechaVenta = DateFormat.getDateInstance().format(date);
            if(fechaVenta.equals(""))
                throw e;
            }
            catch(NumberFormatException errorNum){
                labelError4.setText("Error al ingresar un número");
                status = false;
            }
            catch(Exception e){
               labelError4.setText("Llene todos los campos");
               status = false;
            }
        
        //Si los datos son correctos, se guardan
        if (status){
            Venta v = new Venta();
            try {
                v.ventaCliente(codigoCliente, codigoProducto, cantidadVendida, fechaVenta);
            } catch (IOException ex) {
                Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        return status;
    }
    
    private boolean metodoVentaSinCliente(){
        //Este método guarda lo ingresado en el panel para registrar la venta con un cliente sin registrar
        
        //Se resetea el label de errores
        labelError3.setText("");
        
        //Se declaran los objetos necesarios
        String line;
        int codigoProducto = -1;
        int cantidadVendida = 0;
        String fechaVenta = null;
        boolean status = true;
        
        try{
            Exception e = new Exception("");
            NumberFormatException eNum = new NumberFormatException("");
            
            //Se obtinene el código del producto vendido
            line = jList2.getSelectedValue();
            
            String delimitador = "-"; //Se establece el delimitador entre la información para cada atributo
            String[] arregloTemporal = new String[3]; //Se crea arreglo temporal para guardar el resultado de .split
            arregloTemporal = line.split(delimitador); 
            codigoProducto = Integer.parseInt(arregloTemporal[0]); //Se obtiene el código del producto
            cantidadVendida = Integer.parseInt(jTextField17.getText()); //Se obtiene la cantidad vendida

            if (cantidadVendida <= 0) //Se valida que la cantidad vendida sea mayor que 0
                throw eNum;
            ArchivosBinarios ab = new ArchivosBinarios();
            Producto[] arrPro = ab.llenarArregloProducto();
            if (arrPro[codigoProducto-1].getStockProducto() < cantidadVendida) //Se valida que la cantidad vendida no sea mayor que el stock del producto
                throw eNum;
        
            //Se obtiene y se valida la fecha
            Date date = jDateChooser4.getDate();
                    fechaVenta = DateFormat.getDateInstance().format(date);
            if(fechaVenta.equals(""))
                throw e;
        }
        catch(NumberFormatException errorNum){
           labelError3.setText("Error al ingresar un número");
           status = false;
        }
        catch(Exception e){
           labelError3.setText("Llene todos los campos");
           status = false;
        }
        
        //Si los datos son correctos, se guardan
        if (status){
            Venta v = new Venta();
            try {
                v.ventaSinCliente(codigoProducto, cantidadVendida, fechaVenta);
            } catch (IOException ex) {
                Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        return status;
    }
    
    
    /**
     * @param args the command line arguments
     */
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        /*
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventana().setVisible(true);
            }
        });*/
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bHECPanel;
    private javax.swing.JPanel bHVCPanel;
    private javax.swing.JPanel bInventarioPanel;
    private javax.swing.JPanel bRCPanel;
    private javax.swing.JPanel cardsPanel;
    private javax.swing.JButton clientesButton;
    private javax.swing.JButton dashButton;
    private javax.swing.JPanel dashPanel;
    private javax.swing.JPanel eRCPanel;
    private javax.swing.JButton entregasButton;
    private javax.swing.JButton inventarioButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton21;
    private javax.swing.JButton jButton22;
    private javax.swing.JButton jButton23;
    private javax.swing.JButton jButton24;
    private javax.swing.JButton jButton25;
    private javax.swing.JButton jButton26;
    private javax.swing.JButton jButton27;
    private javax.swing.JButton jButton28;
    private javax.swing.JButton jButton29;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton30;
    private javax.swing.JButton jButton31;
    private javax.swing.JButton jButton32;
    private javax.swing.JButton jButton33;
    private javax.swing.JButton jButton34;
    private javax.swing.JButton jButton35;
    private javax.swing.JButton jButton36;
    private javax.swing.JButton jButton37;
    private javax.swing.JButton jButton38;
    private javax.swing.JButton jButton39;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton40;
    private javax.swing.JButton jButton41;
    private javax.swing.JButton jButton43;
    private javax.swing.JButton jButton44;
    private javax.swing.JButton jButton45;
    private javax.swing.JButton jButton46;
    private javax.swing.JButton jButton47;
    private javax.swing.JButton jButton48;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private com.toedter.calendar.JDateChooser jDateChooser3;
    private com.toedter.calendar.JDateChooser jDateChooser4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel74;
    private javax.swing.JLabel jLabel75;
    private javax.swing.JLabel jLabel76;
    private javax.swing.JLabel jLabel77;
    private javax.swing.JLabel jLabel78;
    private javax.swing.JLabel jLabel79;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel80;
    private javax.swing.JLabel jLabel81;
    private javax.swing.JLabel jLabel82;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList<String> jList1;
    private javax.swing.JList<String> jList10;
    private javax.swing.JList<String> jList11;
    private javax.swing.JList<String> jList12;
    private javax.swing.JList<String> jList13;
    private javax.swing.JList<String> jList2;
    private javax.swing.JList<String> jList3;
    private javax.swing.JList<String> jList4;
    private javax.swing.JList<String> jList5;
    private javax.swing.JList<String> jList6;
    private javax.swing.JList<String> jList7;
    private javax.swing.JList<String> jList8;
    private javax.swing.JList<String> jList9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTextField jTextField14;
    private javax.swing.JTextField jTextField15;
    private javax.swing.JTextField jTextField17;
    private javax.swing.JTextField jTextField18;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField24;
    private javax.swing.JTextField jTextField25;
    private javax.swing.JTextField jTextField26;
    private javax.swing.JTextField jTextField27;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JLabel labelError1;
    private javax.swing.JLabel labelError10;
    private javax.swing.JLabel labelError2;
    private javax.swing.JLabel labelError3;
    private javax.swing.JLabel labelError4;
    private javax.swing.JLabel labelError5;
    private javax.swing.JLabel labelError6;
    private javax.swing.JLabel labelError7;
    private javax.swing.JLabel labelError8;
    private javax.swing.JLabel labelError9;
    private javax.swing.JPanel lateralPanel;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JPanel menuPrincipalPanel;
    private javax.swing.JPanel rNCPanel;
    private javax.swing.JPanel rNPPanel;
    private javax.swing.JPanel rPPanel;
    private javax.swing.JPanel rVCPanel;
    private javax.swing.JPanel rVSCPanel;
    private javax.swing.JPanel subMenuClientesPanel;
    private javax.swing.JPanel subMenuClientesPanel2;
    private javax.swing.JPanel subMenuEntregas;
    private javax.swing.JPanel subMenuEntregas2;
    private javax.swing.JPanel subMenuVentas2Panel;
    private javax.swing.JPanel subMenuVentasPanel;
    private javax.swing.JButton ventasButton;
    // End of variables declaration//GEN-END:variables
}
